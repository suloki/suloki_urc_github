// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: suloki.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "suloki.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace suloki {
class SulokiMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SulokiMessage> {
} _SulokiMessage_default_instance_;
class SulokiTestMsgBodyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SulokiTestMsgBody> {
} _SulokiTestMsgBody_default_instance_;
class SulokiInitMsgBodyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SulokiInitMsgBody> {
} _SulokiInitMsgBody_default_instance_;
class SulokiStartMsgBodyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SulokiStartMsgBody> {
} _SulokiStartMsgBody_default_instance_;
class SulokiStopMsgBodyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SulokiStopMsgBody> {
} _SulokiStopMsgBody_default_instance_;
class SulokiClearMsgBodyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SulokiClearMsgBody> {
} _SulokiClearMsgBody_default_instance_;
class SulokiContextDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SulokiContext> {
} _SulokiContext_default_instance_;
class SulokiOperatorUrcMsgBodyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SulokiOperatorUrcMsgBody> {
} _SulokiOperatorUrcMsgBody_default_instance_;
class SulokiServiceStateUrcMsgBodyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SulokiServiceStateUrcMsgBody> {
} _SulokiServiceStateUrcMsgBody_default_instance_;
class SulokiGroupStateUrcMsgBodyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SulokiGroupStateUrcMsgBody> {
} _SulokiGroupStateUrcMsgBody_default_instance_;
class SulokiSqlReqUrcMsgBodyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SulokiSqlReqUrcMsgBody> {
} _SulokiSqlReqUrcMsgBody_default_instance_;
class SulokiSqlResItemUrcMsgBodyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SulokiSqlResItemUrcMsgBody> {
} _SulokiSqlResItemUrcMsgBody_default_instance_;
class SulokiSqlResUrcMsgBodyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SulokiSqlResUrcMsgBody> {
} _SulokiSqlResUrcMsgBody_default_instance_;
class SulokiRegRecvEventBodyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SulokiRegRecvEventBody> {
} _SulokiRegRecvEventBody_default_instance_;

namespace protobuf_suloki_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiMessage, protocolversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiMessage, businessid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiMessage, messageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiMessage, messagetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiMessage, sequencenumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiMessage, messagebody_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiMessage, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiMessage, errorcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiMessage, urckey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiMessage, urcval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiMessage, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiMessage, attrib_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiMessage, dir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiMessage, routers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiMessage, dest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiMessage, datetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiMessage, option_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiMessage, reserved_),
  0,
  8,
  9,
  11,
  10,
  1,
  2,
  12,
  3,
  4,
  13,
  14,
  15,
  ~0u,
  5,
  6,
  7,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiTestMsgBody, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiTestMsgBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiTestMsgBody, test_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiInitMsgBody, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiInitMsgBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiInitMsgBody, infomation_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiStartMsgBody, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiStartMsgBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiStartMsgBody, infomation_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiStopMsgBody, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiStopMsgBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiStopMsgBody, infomation_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiClearMsgBody, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiClearMsgBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiClearMsgBody, infomation_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiContext, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiContext, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiContext, urname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiContext, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiContext, b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiContext, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiContext, msgori_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiContext, reserved_),
  0,
  3,
  4,
  1,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiOperatorUrcMsgBody, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiOperatorUrcMsgBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiServiceStateUrcMsgBody, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiServiceStateUrcMsgBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiServiceStateUrcMsgBody, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiServiceStateUrcMsgBody, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiServiceStateUrcMsgBody, busydegree_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiServiceStateUrcMsgBody, urname_),
  0,
  2,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiGroupStateUrcMsgBody, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiGroupStateUrcMsgBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiGroupStateUrcMsgBody, stateres_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiSqlReqUrcMsgBody, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiSqlReqUrcMsgBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiSqlReqUrcMsgBody, urckey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiSqlReqUrcMsgBody, urcsql_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiSqlReqUrcMsgBody, urcdbname_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiSqlResItemUrcMsgBody, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiSqlResItemUrcMsgBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiSqlResItemUrcMsgBody, sqlresitem_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiSqlResUrcMsgBody, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiSqlResUrcMsgBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiSqlResUrcMsgBody, sqlres_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiRegRecvEventBody, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiRegRecvEventBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiRegRecvEventBody, patternkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiRegRecvEventBody, businessid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiRegRecvEventBody, messageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiRegRecvEventBody, sequencenumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiRegRecvEventBody, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiRegRecvEventBody, timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiRegRecvEventBody, right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiRegRecvEventBody, policy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiRegRecvEventBody, callback_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SulokiRegRecvEventBody, userdata_),
  0,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  1,
  9,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 22, sizeof(SulokiMessage)},
  { 40, 45, sizeof(SulokiTestMsgBody)},
  { 46, 51, sizeof(SulokiInitMsgBody)},
  { 52, 57, sizeof(SulokiStartMsgBody)},
  { 58, 63, sizeof(SulokiStopMsgBody)},
  { 64, 69, sizeof(SulokiClearMsgBody)},
  { 70, 80, sizeof(SulokiContext)},
  { 86, 90, sizeof(SulokiOperatorUrcMsgBody)},
  { 90, 98, sizeof(SulokiServiceStateUrcMsgBody)},
  { 102, 107, sizeof(SulokiGroupStateUrcMsgBody)},
  { 108, 115, sizeof(SulokiSqlReqUrcMsgBody)},
  { 118, 123, sizeof(SulokiSqlResItemUrcMsgBody)},
  { 124, 129, sizeof(SulokiSqlResUrcMsgBody)},
  { 130, 144, sizeof(SulokiRegRecvEventBody)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SulokiMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SulokiTestMsgBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SulokiInitMsgBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SulokiStartMsgBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SulokiStopMsgBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SulokiClearMsgBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SulokiContext_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SulokiOperatorUrcMsgBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SulokiServiceStateUrcMsgBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SulokiGroupStateUrcMsgBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SulokiSqlReqUrcMsgBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SulokiSqlResItemUrcMsgBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SulokiSqlResUrcMsgBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SulokiRegRecvEventBody_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "suloki.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

}  // namespace

void TableStruct::Shutdown() {
  _SulokiMessage_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _SulokiTestMsgBody_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _SulokiInitMsgBody_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _SulokiStartMsgBody_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _SulokiStopMsgBody_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _SulokiClearMsgBody_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _SulokiContext_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _SulokiOperatorUrcMsgBody_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _SulokiServiceStateUrcMsgBody_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _SulokiGroupStateUrcMsgBody_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _SulokiSqlReqUrcMsgBody_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _SulokiSqlResItemUrcMsgBody_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _SulokiSqlResUrcMsgBody_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _SulokiRegRecvEventBody_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _SulokiMessage_default_instance_.DefaultConstruct();
  _SulokiTestMsgBody_default_instance_.DefaultConstruct();
  _SulokiInitMsgBody_default_instance_.DefaultConstruct();
  _SulokiStartMsgBody_default_instance_.DefaultConstruct();
  _SulokiStopMsgBody_default_instance_.DefaultConstruct();
  _SulokiClearMsgBody_default_instance_.DefaultConstruct();
  _SulokiContext_default_instance_.DefaultConstruct();
  _SulokiOperatorUrcMsgBody_default_instance_.DefaultConstruct();
  _SulokiServiceStateUrcMsgBody_default_instance_.DefaultConstruct();
  _SulokiGroupStateUrcMsgBody_default_instance_.DefaultConstruct();
  _SulokiSqlReqUrcMsgBody_default_instance_.DefaultConstruct();
  _SulokiSqlResItemUrcMsgBody_default_instance_.DefaultConstruct();
  _SulokiSqlResUrcMsgBody_default_instance_.DefaultConstruct();
  _SulokiRegRecvEventBody_default_instance_.DefaultConstruct();
  _SulokiContext_default_instance_.get_mutable()->msgori_ = const_cast< ::suloki::SulokiMessage*>(
      ::suloki::SulokiMessage::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\014suloki.proto\022\006suloki\"\264\003\n\rSulokiMessage"
      "\022\027\n\017protocolVersion\030\001 \002(\t\022\022\n\nbusinessId\030"
      "\002 \002(\021\022\021\n\tmessageId\030\003 \002(\021\0226\n\013messageType\030"
      "\004 \002(\0162!.suloki.SulokiMessage.MessageType"
      "\022\026\n\016sequenceNumber\030\005 \002(\022\022\023\n\013messageBody\030"
      "\006 \001(\014\022\r\n\005token\030\007 \001(\t\022\021\n\terrorCode\030\010 \001(\r\022"
      "\016\n\006urcKey\030\t \001(\t\022\016\n\006urcVal\030\n \001(\014\022\014\n\004type\030"
      "\013 \001(\021\022\016\n\006attrib\030\014 \001(\021\022\013\n\003dir\030\r \001(\021\022\017\n\007ro"
      "uters\030\016 \003(\t\022\014\n\004dest\030\017 \001(\t\022\020\n\010dateTime\030\020 "
      "\001(\t\022\016\n\006option\030\021 \001(\t\022\020\n\010reserved\030\022 \003(\014\">\n"
      "\013MessageType\022\013\n\007request\020\000\022\014\n\010response\020\001\022"
      "\010\n\004push\020\002\022\n\n\006notice\020\003\"!\n\021SulokiTestMsgBo"
      "dy\022\014\n\004test\030\001 \002(\t\"\'\n\021SulokiInitMsgBody\022\022\n"
      "\ninfomation\030\001 \002(\t\"(\n\022SulokiStartMsgBody\022"
      "\022\n\ninfomation\030\001 \002(\t\"\'\n\021SulokiStopMsgBody"
      "\022\022\n\ninfomation\030\001 \002(\t\"(\n\022SulokiClearMsgBo"
      "dy\022\022\n\ninfomation\030\001 \002(\t\"\200\001\n\rSulokiContext"
      "\022\016\n\006urName\030\001 \001(\t\022\n\n\002id\030\002 \001(\022\022\t\n\001b\030\003 \001(\010\022"
      "\017\n\007context\030\004 \001(\t\022%\n\006msgOri\030\005 \001(\0132\025.sulok"
      "i.SulokiMessage\022\020\n\010reserved\030\006 \003(\014\"\032\n\030Sul"
      "okiOperatorUrcMsgBody\"\\\n\034SulokiServiceSt"
      "ateUrcMsgBody\022\n\n\002ip\030\001 \001(\t\022\014\n\004port\030\002 \001(\r\022"
      "\022\n\nbusyDegree\030\003 \001(\021\022\016\n\006urName\030\004 \001(\t\"T\n\032S"
      "ulokiGroupStateUrcMsgBody\0226\n\010stateRes\030\001 "
      "\003(\0132$.suloki.SulokiServiceStateUrcMsgBod"
      "y\"K\n\026SulokiSqlReqUrcMsgBody\022\016\n\006urcKey\030\001 "
      "\002(\t\022\016\n\006urcSql\030\002 \002(\t\022\021\n\turcDbName\030\003 \001(\t\"0"
      "\n\032SulokiSqlResItemUrcMsgBody\022\022\n\nsqlResIt"
      "em\030\001 \003(\014\"L\n\026SulokiSqlResUrcMsgBody\0222\n\006sq"
      "lRes\030\001 \003(\0132\".suloki.SulokiSqlResItemUrcM"
      "sgBody\"\211\002\n\026SulokiRegRecvEventBody\022\022\n\npat"
      "ternKey\030\001 \002(\t\022\022\n\nbusinessId\030\002 \002(\021\022\021\n\tmes"
      "sageId\030\003 \002(\021\022\026\n\016sequenceNumber\030\004 \001(\022\022\037\n\004"
      "mode\030\005 \002(\0162\021.suloki.EventMode\022\017\n\007timeout"
      "\030\006 \001(\021\022!\n\005right\030\007 \002(\0162\022.suloki.EventRigh"
      "t\022#\n\006policy\030\010 \001(\0162\023.suloki.EventPolicy\022\020"
      "\n\010callback\030\t \002(\t\022\020\n\010userdata\030\n \001(\004*&\n\tEv"
      "entMode\022\013\n\007ONETIME\020\000\022\014\n\010REPEATED\020\001*\'\n\nEv"
      "entRight\022\r\n\tEXCLUSIVE\020\000\022\n\n\006SHARED\020\001*8\n\013E"
      "ventPolicy\022\r\n\tBROADCAST\020\000\022\014\n\010ROTATION\020\001\022"
      "\014\n\010SEQUENCE\020\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1613);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "suloki.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_suloki_2eproto

const ::google::protobuf::EnumDescriptor* SulokiMessage_MessageType_descriptor() {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_enum_descriptors[0];
}
bool SulokiMessage_MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SulokiMessage_MessageType SulokiMessage::request;
const SulokiMessage_MessageType SulokiMessage::response;
const SulokiMessage_MessageType SulokiMessage::push;
const SulokiMessage_MessageType SulokiMessage::notice;
const SulokiMessage_MessageType SulokiMessage::MessageType_MIN;
const SulokiMessage_MessageType SulokiMessage::MessageType_MAX;
const int SulokiMessage::MessageType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EventMode_descriptor() {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_enum_descriptors[1];
}
bool EventMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EventRight_descriptor() {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_enum_descriptors[2];
}
bool EventRight_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EventPolicy_descriptor() {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_enum_descriptors[3];
}
bool EventPolicy_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SulokiMessage::kProtocolVersionFieldNumber;
const int SulokiMessage::kBusinessIdFieldNumber;
const int SulokiMessage::kMessageIdFieldNumber;
const int SulokiMessage::kMessageTypeFieldNumber;
const int SulokiMessage::kSequenceNumberFieldNumber;
const int SulokiMessage::kMessageBodyFieldNumber;
const int SulokiMessage::kTokenFieldNumber;
const int SulokiMessage::kErrorCodeFieldNumber;
const int SulokiMessage::kUrcKeyFieldNumber;
const int SulokiMessage::kUrcValFieldNumber;
const int SulokiMessage::kTypeFieldNumber;
const int SulokiMessage::kAttribFieldNumber;
const int SulokiMessage::kDirFieldNumber;
const int SulokiMessage::kRoutersFieldNumber;
const int SulokiMessage::kDestFieldNumber;
const int SulokiMessage::kDateTimeFieldNumber;
const int SulokiMessage::kOptionFieldNumber;
const int SulokiMessage::kReservedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SulokiMessage::SulokiMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_suloki_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:suloki.SulokiMessage)
}
SulokiMessage::SulokiMessage(const SulokiMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      routers_(from.routers_),
      reserved_(from.reserved_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  protocolversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_protocolversion()) {
    protocolversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocolversion_);
  }
  messagebody_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_messagebody()) {
    messagebody_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagebody_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  urckey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_urckey()) {
    urckey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.urckey_);
  }
  urcval_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_urcval()) {
    urcval_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.urcval_);
  }
  dest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dest()) {
    dest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dest_);
  }
  datetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_datetime()) {
    datetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datetime_);
  }
  option_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_option()) {
    option_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.option_);
  }
  ::memcpy(&businessid_, &from.businessid_,
    reinterpret_cast<char*>(&dir_) -
    reinterpret_cast<char*>(&businessid_) + sizeof(dir_));
  // @@protoc_insertion_point(copy_constructor:suloki.SulokiMessage)
}

void SulokiMessage::SharedCtor() {
  _cached_size_ = 0;
  protocolversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagebody_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  urckey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  urcval_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  option_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&businessid_, 0, reinterpret_cast<char*>(&dir_) -
    reinterpret_cast<char*>(&businessid_) + sizeof(dir_));
}

SulokiMessage::~SulokiMessage() {
  // @@protoc_insertion_point(destructor:suloki.SulokiMessage)
  SharedDtor();
}

void SulokiMessage::SharedDtor() {
  protocolversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagebody_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  urckey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  urcval_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  option_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SulokiMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SulokiMessage::descriptor() {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[0].descriptor;
}

const SulokiMessage& SulokiMessage::default_instance() {
  protobuf_suloki_2eproto::InitDefaults();
  return *internal_default_instance();
}

SulokiMessage* SulokiMessage::New(::google::protobuf::Arena* arena) const {
  SulokiMessage* n = new SulokiMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SulokiMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:suloki.SulokiMessage)
  routers_.Clear();
  reserved_.Clear();
  if (_has_bits_[0 / 32] & 255u) {
    if (has_protocolversion()) {
      GOOGLE_DCHECK(!protocolversion_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*protocolversion_.UnsafeRawStringPointer())->clear();
    }
    if (has_messagebody()) {
      GOOGLE_DCHECK(!messagebody_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*messagebody_.UnsafeRawStringPointer())->clear();
    }
    if (has_token()) {
      GOOGLE_DCHECK(!token_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*token_.UnsafeRawStringPointer())->clear();
    }
    if (has_urckey()) {
      GOOGLE_DCHECK(!urckey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*urckey_.UnsafeRawStringPointer())->clear();
    }
    if (has_urcval()) {
      GOOGLE_DCHECK(!urcval_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*urcval_.UnsafeRawStringPointer())->clear();
    }
    if (has_dest()) {
      GOOGLE_DCHECK(!dest_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*dest_.UnsafeRawStringPointer())->clear();
    }
    if (has_datetime()) {
      GOOGLE_DCHECK(!datetime_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*datetime_.UnsafeRawStringPointer())->clear();
    }
    if (has_option()) {
      GOOGLE_DCHECK(!option_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*option_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ::memset(&businessid_, 0, reinterpret_cast<char*>(&dir_) -
      reinterpret_cast<char*>(&businessid_) + sizeof(dir_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SulokiMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suloki.SulokiMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string protocolVersion = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_protocolversion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->protocolversion().data(), this->protocolversion().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suloki.SulokiMessage.protocolVersion");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 businessId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_businessid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &businessid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 messageId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_messageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &messageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .suloki.SulokiMessage.MessageType messageType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::suloki::SulokiMessage_MessageType_IsValid(value)) {
            set_messagetype(static_cast< ::suloki::SulokiMessage_MessageType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint64 sequenceNumber = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_sequencenumber();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &sequencenumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes messageBody = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_messagebody()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string token = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suloki.SulokiMessage.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 errorCode = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_errorcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string urcKey = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_urckey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->urckey().data(), this->urckey().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suloki.SulokiMessage.urcKey");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes urcVal = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_urcval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 type = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 attrib = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          set_has_attrib();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &attrib_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 dir = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          set_has_dir();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &dir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string routers = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_routers()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->routers(this->routers_size() - 1).data(),
            this->routers(this->routers_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suloki.SulokiMessage.routers");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string dest = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dest()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dest().data(), this->dest().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suloki.SulokiMessage.dest");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string dateTime = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_datetime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->datetime().data(), this->datetime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suloki.SulokiMessage.dateTime");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string option = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_option()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->option().data(), this->option().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suloki.SulokiMessage.option");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes reserved = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_reserved()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suloki.SulokiMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suloki.SulokiMessage)
  return false;
#undef DO_
}

void SulokiMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suloki.SulokiMessage)
  // required string protocolVersion = 1;
  if (has_protocolversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->protocolversion().data(), this->protocolversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiMessage.protocolVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->protocolversion(), output);
  }

  // required sint32 businessId = 2;
  if (has_businessid()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->businessid(), output);
  }

  // required sint32 messageId = 3;
  if (has_messageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->messageid(), output);
  }

  // required .suloki.SulokiMessage.MessageType messageType = 4;
  if (has_messagetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->messagetype(), output);
  }

  // required sint64 sequenceNumber = 5;
  if (has_sequencenumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(5, this->sequencenumber(), output);
  }

  // optional bytes messageBody = 6;
  if (has_messagebody()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->messagebody(), output);
  }

  // optional string token = 7;
  if (has_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiMessage.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->token(), output);
  }

  // optional uint32 errorCode = 8;
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->errorcode(), output);
  }

  // optional string urcKey = 9;
  if (has_urckey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->urckey().data(), this->urckey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiMessage.urcKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->urckey(), output);
  }

  // optional bytes urcVal = 10;
  if (has_urcval()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->urcval(), output);
  }

  // optional sint32 type = 11;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(11, this->type(), output);
  }

  // optional sint32 attrib = 12;
  if (has_attrib()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(12, this->attrib(), output);
  }

  // optional sint32 dir = 13;
  if (has_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(13, this->dir(), output);
  }

  // repeated string routers = 14;
  for (int i = 0, n = this->routers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->routers(i).data(), this->routers(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiMessage.routers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->routers(i), output);
  }

  // optional string dest = 15;
  if (has_dest()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dest().data(), this->dest().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiMessage.dest");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->dest(), output);
  }

  // optional string dateTime = 16;
  if (has_datetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->datetime().data(), this->datetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiMessage.dateTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->datetime(), output);
  }

  // optional string option = 17;
  if (has_option()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->option().data(), this->option().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiMessage.option");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->option(), output);
  }

  // repeated bytes reserved = 18;
  for (int i = 0, n = this->reserved_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      18, this->reserved(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:suloki.SulokiMessage)
}

::google::protobuf::uint8* SulokiMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:suloki.SulokiMessage)
  // required string protocolVersion = 1;
  if (has_protocolversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->protocolversion().data(), this->protocolversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiMessage.protocolVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->protocolversion(), target);
  }

  // required sint32 businessId = 2;
  if (has_businessid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->businessid(), target);
  }

  // required sint32 messageId = 3;
  if (has_messageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->messageid(), target);
  }

  // required .suloki.SulokiMessage.MessageType messageType = 4;
  if (has_messagetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->messagetype(), target);
  }

  // required sint64 sequenceNumber = 5;
  if (has_sequencenumber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(5, this->sequencenumber(), target);
  }

  // optional bytes messageBody = 6;
  if (has_messagebody()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->messagebody(), target);
  }

  // optional string token = 7;
  if (has_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiMessage.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->token(), target);
  }

  // optional uint32 errorCode = 8;
  if (has_errorcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->errorcode(), target);
  }

  // optional string urcKey = 9;
  if (has_urckey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->urckey().data(), this->urckey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiMessage.urcKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->urckey(), target);
  }

  // optional bytes urcVal = 10;
  if (has_urcval()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->urcval(), target);
  }

  // optional sint32 type = 11;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(11, this->type(), target);
  }

  // optional sint32 attrib = 12;
  if (has_attrib()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(12, this->attrib(), target);
  }

  // optional sint32 dir = 13;
  if (has_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(13, this->dir(), target);
  }

  // repeated string routers = 14;
  for (int i = 0, n = this->routers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->routers(i).data(), this->routers(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiMessage.routers");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(14, this->routers(i), target);
  }

  // optional string dest = 15;
  if (has_dest()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dest().data(), this->dest().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiMessage.dest");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->dest(), target);
  }

  // optional string dateTime = 16;
  if (has_datetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->datetime().data(), this->datetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiMessage.dateTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->datetime(), target);
  }

  // optional string option = 17;
  if (has_option()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->option().data(), this->option().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiMessage.option");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->option(), target);
  }

  // repeated bytes reserved = 18;
  for (int i = 0, n = this->reserved_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(18, this->reserved(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:suloki.SulokiMessage)
  return target;
}

size_t SulokiMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:suloki.SulokiMessage)
  size_t total_size = 0;

  if (has_protocolversion()) {
    // required string protocolVersion = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->protocolversion());
  }

  if (has_businessid()) {
    // required sint32 businessId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->businessid());
  }

  if (has_messageid()) {
    // required sint32 messageId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->messageid());
  }

  if (has_sequencenumber()) {
    // required sint64 sequenceNumber = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->sequencenumber());
  }

  if (has_messagetype()) {
    // required .suloki.SulokiMessage.MessageType messageType = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->messagetype());
  }

  return total_size;
}
size_t SulokiMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:suloki.SulokiMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000f01) ^ 0x00000f01) == 0) {  // All required fields are present.
    // required string protocolVersion = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->protocolversion());

    // required sint32 businessId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->businessid());

    // required sint32 messageId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->messageid());

    // required sint64 sequenceNumber = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->sequencenumber());

    // required .suloki.SulokiMessage.MessageType messageType = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->messagetype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string routers = 14;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->routers_size());
  for (int i = 0, n = this->routers_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->routers(i));
  }

  // repeated bytes reserved = 18;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->reserved_size());
  for (int i = 0, n = this->reserved_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->reserved(i));
  }

  if (_has_bits_[0 / 32] & 254u) {
    // optional bytes messageBody = 6;
    if (has_messagebody()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->messagebody());
    }

    // optional string token = 7;
    if (has_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->token());
    }

    // optional string urcKey = 9;
    if (has_urckey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->urckey());
    }

    // optional bytes urcVal = 10;
    if (has_urcval()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->urcval());
    }

    // optional string dest = 15;
    if (has_dest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dest());
    }

    // optional string dateTime = 16;
    if (has_datetime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->datetime());
    }

    // optional string option = 17;
    if (has_option()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->option());
    }

  }
  if (_has_bits_[8 / 32] & 61440u) {
    // optional uint32 errorCode = 8;
    if (has_errorcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->errorcode());
    }

    // optional sint32 type = 11;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->type());
    }

    // optional sint32 attrib = 12;
    if (has_attrib()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->attrib());
    }

    // optional sint32 dir = 13;
    if (has_dir()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->dir());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SulokiMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suloki.SulokiMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SulokiMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SulokiMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suloki.SulokiMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suloki.SulokiMessage)
    MergeFrom(*source);
  }
}

void SulokiMessage::MergeFrom(const SulokiMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suloki.SulokiMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  routers_.MergeFrom(from.routers_);
  reserved_.MergeFrom(from.reserved_);
  if (from._has_bits_[0 / 32] & 255u) {
    if (from.has_protocolversion()) {
      set_has_protocolversion();
      protocolversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocolversion_);
    }
    if (from.has_messagebody()) {
      set_has_messagebody();
      messagebody_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagebody_);
    }
    if (from.has_token()) {
      set_has_token();
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (from.has_urckey()) {
      set_has_urckey();
      urckey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.urckey_);
    }
    if (from.has_urcval()) {
      set_has_urcval();
      urcval_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.urcval_);
    }
    if (from.has_dest()) {
      set_has_dest();
      dest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dest_);
    }
    if (from.has_datetime()) {
      set_has_datetime();
      datetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datetime_);
    }
    if (from.has_option()) {
      set_has_option();
      option_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.option_);
    }
  }
  if (from._has_bits_[8 / 32] & 65280u) {
    if (from.has_businessid()) {
      set_businessid(from.businessid());
    }
    if (from.has_messageid()) {
      set_messageid(from.messageid());
    }
    if (from.has_sequencenumber()) {
      set_sequencenumber(from.sequencenumber());
    }
    if (from.has_messagetype()) {
      set_messagetype(from.messagetype());
    }
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_attrib()) {
      set_attrib(from.attrib());
    }
    if (from.has_dir()) {
      set_dir(from.dir());
    }
  }
}

void SulokiMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suloki.SulokiMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SulokiMessage::CopyFrom(const SulokiMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suloki.SulokiMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SulokiMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000f01) != 0x00000f01) return false;
  return true;
}

void SulokiMessage::Swap(SulokiMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SulokiMessage::InternalSwap(SulokiMessage* other) {
  routers_.UnsafeArenaSwap(&other->routers_);
  reserved_.UnsafeArenaSwap(&other->reserved_);
  protocolversion_.Swap(&other->protocolversion_);
  messagebody_.Swap(&other->messagebody_);
  token_.Swap(&other->token_);
  urckey_.Swap(&other->urckey_);
  urcval_.Swap(&other->urcval_);
  dest_.Swap(&other->dest_);
  datetime_.Swap(&other->datetime_);
  option_.Swap(&other->option_);
  std::swap(businessid_, other->businessid_);
  std::swap(messageid_, other->messageid_);
  std::swap(sequencenumber_, other->sequencenumber_);
  std::swap(messagetype_, other->messagetype_);
  std::swap(errorcode_, other->errorcode_);
  std::swap(type_, other->type_);
  std::swap(attrib_, other->attrib_);
  std::swap(dir_, other->dir_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SulokiMessage::GetMetadata() const {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SulokiMessage

// required string protocolVersion = 1;
bool SulokiMessage::has_protocolversion() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SulokiMessage::set_has_protocolversion() {
  _has_bits_[0] |= 0x00000001u;
}
void SulokiMessage::clear_has_protocolversion() {
  _has_bits_[0] &= ~0x00000001u;
}
void SulokiMessage::clear_protocolversion() {
  protocolversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_protocolversion();
}
const ::std::string& SulokiMessage::protocolversion() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiMessage.protocolVersion)
  return protocolversion_.GetNoArena();
}
void SulokiMessage::set_protocolversion(const ::std::string& value) {
  set_has_protocolversion();
  protocolversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suloki.SulokiMessage.protocolVersion)
}
#if LANG_CXX11
void SulokiMessage::set_protocolversion(::std::string&& value) {
  set_has_protocolversion();
  protocolversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:suloki.SulokiMessage.protocolVersion)
}
#endif
void SulokiMessage::set_protocolversion(const char* value) {
  set_has_protocolversion();
  protocolversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suloki.SulokiMessage.protocolVersion)
}
void SulokiMessage::set_protocolversion(const char* value, size_t size) {
  set_has_protocolversion();
  protocolversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiMessage.protocolVersion)
}
::std::string* SulokiMessage::mutable_protocolversion() {
  set_has_protocolversion();
  // @@protoc_insertion_point(field_mutable:suloki.SulokiMessage.protocolVersion)
  return protocolversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SulokiMessage::release_protocolversion() {
  // @@protoc_insertion_point(field_release:suloki.SulokiMessage.protocolVersion)
  clear_has_protocolversion();
  return protocolversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SulokiMessage::set_allocated_protocolversion(::std::string* protocolversion) {
  if (protocolversion != NULL) {
    set_has_protocolversion();
  } else {
    clear_has_protocolversion();
  }
  protocolversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protocolversion);
  // @@protoc_insertion_point(field_set_allocated:suloki.SulokiMessage.protocolVersion)
}

// required sint32 businessId = 2;
bool SulokiMessage::has_businessid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void SulokiMessage::set_has_businessid() {
  _has_bits_[0] |= 0x00000100u;
}
void SulokiMessage::clear_has_businessid() {
  _has_bits_[0] &= ~0x00000100u;
}
void SulokiMessage::clear_businessid() {
  businessid_ = 0;
  clear_has_businessid();
}
::google::protobuf::int32 SulokiMessage::businessid() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiMessage.businessId)
  return businessid_;
}
void SulokiMessage::set_businessid(::google::protobuf::int32 value) {
  set_has_businessid();
  businessid_ = value;
  // @@protoc_insertion_point(field_set:suloki.SulokiMessage.businessId)
}

// required sint32 messageId = 3;
bool SulokiMessage::has_messageid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void SulokiMessage::set_has_messageid() {
  _has_bits_[0] |= 0x00000200u;
}
void SulokiMessage::clear_has_messageid() {
  _has_bits_[0] &= ~0x00000200u;
}
void SulokiMessage::clear_messageid() {
  messageid_ = 0;
  clear_has_messageid();
}
::google::protobuf::int32 SulokiMessage::messageid() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiMessage.messageId)
  return messageid_;
}
void SulokiMessage::set_messageid(::google::protobuf::int32 value) {
  set_has_messageid();
  messageid_ = value;
  // @@protoc_insertion_point(field_set:suloki.SulokiMessage.messageId)
}

// required .suloki.SulokiMessage.MessageType messageType = 4;
bool SulokiMessage::has_messagetype() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void SulokiMessage::set_has_messagetype() {
  _has_bits_[0] |= 0x00000800u;
}
void SulokiMessage::clear_has_messagetype() {
  _has_bits_[0] &= ~0x00000800u;
}
void SulokiMessage::clear_messagetype() {
  messagetype_ = 0;
  clear_has_messagetype();
}
::suloki::SulokiMessage_MessageType SulokiMessage::messagetype() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiMessage.messageType)
  return static_cast< ::suloki::SulokiMessage_MessageType >(messagetype_);
}
void SulokiMessage::set_messagetype(::suloki::SulokiMessage_MessageType value) {
  assert(::suloki::SulokiMessage_MessageType_IsValid(value));
  set_has_messagetype();
  messagetype_ = value;
  // @@protoc_insertion_point(field_set:suloki.SulokiMessage.messageType)
}

// required sint64 sequenceNumber = 5;
bool SulokiMessage::has_sequencenumber() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void SulokiMessage::set_has_sequencenumber() {
  _has_bits_[0] |= 0x00000400u;
}
void SulokiMessage::clear_has_sequencenumber() {
  _has_bits_[0] &= ~0x00000400u;
}
void SulokiMessage::clear_sequencenumber() {
  sequencenumber_ = GOOGLE_LONGLONG(0);
  clear_has_sequencenumber();
}
::google::protobuf::int64 SulokiMessage::sequencenumber() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiMessage.sequenceNumber)
  return sequencenumber_;
}
void SulokiMessage::set_sequencenumber(::google::protobuf::int64 value) {
  set_has_sequencenumber();
  sequencenumber_ = value;
  // @@protoc_insertion_point(field_set:suloki.SulokiMessage.sequenceNumber)
}

// optional bytes messageBody = 6;
bool SulokiMessage::has_messagebody() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SulokiMessage::set_has_messagebody() {
  _has_bits_[0] |= 0x00000002u;
}
void SulokiMessage::clear_has_messagebody() {
  _has_bits_[0] &= ~0x00000002u;
}
void SulokiMessage::clear_messagebody() {
  messagebody_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_messagebody();
}
const ::std::string& SulokiMessage::messagebody() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiMessage.messageBody)
  return messagebody_.GetNoArena();
}
void SulokiMessage::set_messagebody(const ::std::string& value) {
  set_has_messagebody();
  messagebody_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suloki.SulokiMessage.messageBody)
}
#if LANG_CXX11
void SulokiMessage::set_messagebody(::std::string&& value) {
  set_has_messagebody();
  messagebody_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:suloki.SulokiMessage.messageBody)
}
#endif
void SulokiMessage::set_messagebody(const char* value) {
  set_has_messagebody();
  messagebody_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suloki.SulokiMessage.messageBody)
}
void SulokiMessage::set_messagebody(const void* value, size_t size) {
  set_has_messagebody();
  messagebody_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiMessage.messageBody)
}
::std::string* SulokiMessage::mutable_messagebody() {
  set_has_messagebody();
  // @@protoc_insertion_point(field_mutable:suloki.SulokiMessage.messageBody)
  return messagebody_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SulokiMessage::release_messagebody() {
  // @@protoc_insertion_point(field_release:suloki.SulokiMessage.messageBody)
  clear_has_messagebody();
  return messagebody_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SulokiMessage::set_allocated_messagebody(::std::string* messagebody) {
  if (messagebody != NULL) {
    set_has_messagebody();
  } else {
    clear_has_messagebody();
  }
  messagebody_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), messagebody);
  // @@protoc_insertion_point(field_set_allocated:suloki.SulokiMessage.messageBody)
}

// optional string token = 7;
bool SulokiMessage::has_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SulokiMessage::set_has_token() {
  _has_bits_[0] |= 0x00000004u;
}
void SulokiMessage::clear_has_token() {
  _has_bits_[0] &= ~0x00000004u;
}
void SulokiMessage::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
const ::std::string& SulokiMessage::token() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiMessage.token)
  return token_.GetNoArena();
}
void SulokiMessage::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suloki.SulokiMessage.token)
}
#if LANG_CXX11
void SulokiMessage::set_token(::std::string&& value) {
  set_has_token();
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:suloki.SulokiMessage.token)
}
#endif
void SulokiMessage::set_token(const char* value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suloki.SulokiMessage.token)
}
void SulokiMessage::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiMessage.token)
}
::std::string* SulokiMessage::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:suloki.SulokiMessage.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SulokiMessage::release_token() {
  // @@protoc_insertion_point(field_release:suloki.SulokiMessage.token)
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SulokiMessage::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:suloki.SulokiMessage.token)
}

// optional uint32 errorCode = 8;
bool SulokiMessage::has_errorcode() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void SulokiMessage::set_has_errorcode() {
  _has_bits_[0] |= 0x00001000u;
}
void SulokiMessage::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00001000u;
}
void SulokiMessage::clear_errorcode() {
  errorcode_ = 0u;
  clear_has_errorcode();
}
::google::protobuf::uint32 SulokiMessage::errorcode() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiMessage.errorCode)
  return errorcode_;
}
void SulokiMessage::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:suloki.SulokiMessage.errorCode)
}

// optional string urcKey = 9;
bool SulokiMessage::has_urckey() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SulokiMessage::set_has_urckey() {
  _has_bits_[0] |= 0x00000008u;
}
void SulokiMessage::clear_has_urckey() {
  _has_bits_[0] &= ~0x00000008u;
}
void SulokiMessage::clear_urckey() {
  urckey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_urckey();
}
const ::std::string& SulokiMessage::urckey() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiMessage.urcKey)
  return urckey_.GetNoArena();
}
void SulokiMessage::set_urckey(const ::std::string& value) {
  set_has_urckey();
  urckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suloki.SulokiMessage.urcKey)
}
#if LANG_CXX11
void SulokiMessage::set_urckey(::std::string&& value) {
  set_has_urckey();
  urckey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:suloki.SulokiMessage.urcKey)
}
#endif
void SulokiMessage::set_urckey(const char* value) {
  set_has_urckey();
  urckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suloki.SulokiMessage.urcKey)
}
void SulokiMessage::set_urckey(const char* value, size_t size) {
  set_has_urckey();
  urckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiMessage.urcKey)
}
::std::string* SulokiMessage::mutable_urckey() {
  set_has_urckey();
  // @@protoc_insertion_point(field_mutable:suloki.SulokiMessage.urcKey)
  return urckey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SulokiMessage::release_urckey() {
  // @@protoc_insertion_point(field_release:suloki.SulokiMessage.urcKey)
  clear_has_urckey();
  return urckey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SulokiMessage::set_allocated_urckey(::std::string* urckey) {
  if (urckey != NULL) {
    set_has_urckey();
  } else {
    clear_has_urckey();
  }
  urckey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), urckey);
  // @@protoc_insertion_point(field_set_allocated:suloki.SulokiMessage.urcKey)
}

// optional bytes urcVal = 10;
bool SulokiMessage::has_urcval() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SulokiMessage::set_has_urcval() {
  _has_bits_[0] |= 0x00000010u;
}
void SulokiMessage::clear_has_urcval() {
  _has_bits_[0] &= ~0x00000010u;
}
void SulokiMessage::clear_urcval() {
  urcval_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_urcval();
}
const ::std::string& SulokiMessage::urcval() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiMessage.urcVal)
  return urcval_.GetNoArena();
}
void SulokiMessage::set_urcval(const ::std::string& value) {
  set_has_urcval();
  urcval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suloki.SulokiMessage.urcVal)
}
#if LANG_CXX11
void SulokiMessage::set_urcval(::std::string&& value) {
  set_has_urcval();
  urcval_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:suloki.SulokiMessage.urcVal)
}
#endif
void SulokiMessage::set_urcval(const char* value) {
  set_has_urcval();
  urcval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suloki.SulokiMessage.urcVal)
}
void SulokiMessage::set_urcval(const void* value, size_t size) {
  set_has_urcval();
  urcval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiMessage.urcVal)
}
::std::string* SulokiMessage::mutable_urcval() {
  set_has_urcval();
  // @@protoc_insertion_point(field_mutable:suloki.SulokiMessage.urcVal)
  return urcval_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SulokiMessage::release_urcval() {
  // @@protoc_insertion_point(field_release:suloki.SulokiMessage.urcVal)
  clear_has_urcval();
  return urcval_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SulokiMessage::set_allocated_urcval(::std::string* urcval) {
  if (urcval != NULL) {
    set_has_urcval();
  } else {
    clear_has_urcval();
  }
  urcval_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), urcval);
  // @@protoc_insertion_point(field_set_allocated:suloki.SulokiMessage.urcVal)
}

// optional sint32 type = 11;
bool SulokiMessage::has_type() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void SulokiMessage::set_has_type() {
  _has_bits_[0] |= 0x00002000u;
}
void SulokiMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00002000u;
}
void SulokiMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
::google::protobuf::int32 SulokiMessage::type() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiMessage.type)
  return type_;
}
void SulokiMessage::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:suloki.SulokiMessage.type)
}

// optional sint32 attrib = 12;
bool SulokiMessage::has_attrib() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void SulokiMessage::set_has_attrib() {
  _has_bits_[0] |= 0x00004000u;
}
void SulokiMessage::clear_has_attrib() {
  _has_bits_[0] &= ~0x00004000u;
}
void SulokiMessage::clear_attrib() {
  attrib_ = 0;
  clear_has_attrib();
}
::google::protobuf::int32 SulokiMessage::attrib() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiMessage.attrib)
  return attrib_;
}
void SulokiMessage::set_attrib(::google::protobuf::int32 value) {
  set_has_attrib();
  attrib_ = value;
  // @@protoc_insertion_point(field_set:suloki.SulokiMessage.attrib)
}

// optional sint32 dir = 13;
bool SulokiMessage::has_dir() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void SulokiMessage::set_has_dir() {
  _has_bits_[0] |= 0x00008000u;
}
void SulokiMessage::clear_has_dir() {
  _has_bits_[0] &= ~0x00008000u;
}
void SulokiMessage::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
::google::protobuf::int32 SulokiMessage::dir() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiMessage.dir)
  return dir_;
}
void SulokiMessage::set_dir(::google::protobuf::int32 value) {
  set_has_dir();
  dir_ = value;
  // @@protoc_insertion_point(field_set:suloki.SulokiMessage.dir)
}

// repeated string routers = 14;
int SulokiMessage::routers_size() const {
  return routers_.size();
}
void SulokiMessage::clear_routers() {
  routers_.Clear();
}
const ::std::string& SulokiMessage::routers(int index) const {
  // @@protoc_insertion_point(field_get:suloki.SulokiMessage.routers)
  return routers_.Get(index);
}
::std::string* SulokiMessage::mutable_routers(int index) {
  // @@protoc_insertion_point(field_mutable:suloki.SulokiMessage.routers)
  return routers_.Mutable(index);
}
void SulokiMessage::set_routers(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:suloki.SulokiMessage.routers)
  routers_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void SulokiMessage::set_routers(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:suloki.SulokiMessage.routers)
  routers_.Mutable(index)->assign(std::move(value));
}
#endif
void SulokiMessage::set_routers(int index, const char* value) {
  routers_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:suloki.SulokiMessage.routers)
}
void SulokiMessage::set_routers(int index, const char* value, size_t size) {
  routers_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiMessage.routers)
}
::std::string* SulokiMessage::add_routers() {
  // @@protoc_insertion_point(field_add_mutable:suloki.SulokiMessage.routers)
  return routers_.Add();
}
void SulokiMessage::add_routers(const ::std::string& value) {
  routers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:suloki.SulokiMessage.routers)
}
#if LANG_CXX11
void SulokiMessage::add_routers(::std::string&& value) {
  routers_.Add()->assign(std::move(value));
  // @@protoc_insertion_point(field_add:suloki.SulokiMessage.routers)
}
#endif
void SulokiMessage::add_routers(const char* value) {
  routers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:suloki.SulokiMessage.routers)
}
void SulokiMessage::add_routers(const char* value, size_t size) {
  routers_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:suloki.SulokiMessage.routers)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
SulokiMessage::routers() const {
  // @@protoc_insertion_point(field_list:suloki.SulokiMessage.routers)
  return routers_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
SulokiMessage::mutable_routers() {
  // @@protoc_insertion_point(field_mutable_list:suloki.SulokiMessage.routers)
  return &routers_;
}

// optional string dest = 15;
bool SulokiMessage::has_dest() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SulokiMessage::set_has_dest() {
  _has_bits_[0] |= 0x00000020u;
}
void SulokiMessage::clear_has_dest() {
  _has_bits_[0] &= ~0x00000020u;
}
void SulokiMessage::clear_dest() {
  dest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dest();
}
const ::std::string& SulokiMessage::dest() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiMessage.dest)
  return dest_.GetNoArena();
}
void SulokiMessage::set_dest(const ::std::string& value) {
  set_has_dest();
  dest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suloki.SulokiMessage.dest)
}
#if LANG_CXX11
void SulokiMessage::set_dest(::std::string&& value) {
  set_has_dest();
  dest_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:suloki.SulokiMessage.dest)
}
#endif
void SulokiMessage::set_dest(const char* value) {
  set_has_dest();
  dest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suloki.SulokiMessage.dest)
}
void SulokiMessage::set_dest(const char* value, size_t size) {
  set_has_dest();
  dest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiMessage.dest)
}
::std::string* SulokiMessage::mutable_dest() {
  set_has_dest();
  // @@protoc_insertion_point(field_mutable:suloki.SulokiMessage.dest)
  return dest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SulokiMessage::release_dest() {
  // @@protoc_insertion_point(field_release:suloki.SulokiMessage.dest)
  clear_has_dest();
  return dest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SulokiMessage::set_allocated_dest(::std::string* dest) {
  if (dest != NULL) {
    set_has_dest();
  } else {
    clear_has_dest();
  }
  dest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dest);
  // @@protoc_insertion_point(field_set_allocated:suloki.SulokiMessage.dest)
}

// optional string dateTime = 16;
bool SulokiMessage::has_datetime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SulokiMessage::set_has_datetime() {
  _has_bits_[0] |= 0x00000040u;
}
void SulokiMessage::clear_has_datetime() {
  _has_bits_[0] &= ~0x00000040u;
}
void SulokiMessage::clear_datetime() {
  datetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_datetime();
}
const ::std::string& SulokiMessage::datetime() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiMessage.dateTime)
  return datetime_.GetNoArena();
}
void SulokiMessage::set_datetime(const ::std::string& value) {
  set_has_datetime();
  datetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suloki.SulokiMessage.dateTime)
}
#if LANG_CXX11
void SulokiMessage::set_datetime(::std::string&& value) {
  set_has_datetime();
  datetime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:suloki.SulokiMessage.dateTime)
}
#endif
void SulokiMessage::set_datetime(const char* value) {
  set_has_datetime();
  datetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suloki.SulokiMessage.dateTime)
}
void SulokiMessage::set_datetime(const char* value, size_t size) {
  set_has_datetime();
  datetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiMessage.dateTime)
}
::std::string* SulokiMessage::mutable_datetime() {
  set_has_datetime();
  // @@protoc_insertion_point(field_mutable:suloki.SulokiMessage.dateTime)
  return datetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SulokiMessage::release_datetime() {
  // @@protoc_insertion_point(field_release:suloki.SulokiMessage.dateTime)
  clear_has_datetime();
  return datetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SulokiMessage::set_allocated_datetime(::std::string* datetime) {
  if (datetime != NULL) {
    set_has_datetime();
  } else {
    clear_has_datetime();
  }
  datetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datetime);
  // @@protoc_insertion_point(field_set_allocated:suloki.SulokiMessage.dateTime)
}

// optional string option = 17;
bool SulokiMessage::has_option() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void SulokiMessage::set_has_option() {
  _has_bits_[0] |= 0x00000080u;
}
void SulokiMessage::clear_has_option() {
  _has_bits_[0] &= ~0x00000080u;
}
void SulokiMessage::clear_option() {
  option_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_option();
}
const ::std::string& SulokiMessage::option() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiMessage.option)
  return option_.GetNoArena();
}
void SulokiMessage::set_option(const ::std::string& value) {
  set_has_option();
  option_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suloki.SulokiMessage.option)
}
#if LANG_CXX11
void SulokiMessage::set_option(::std::string&& value) {
  set_has_option();
  option_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:suloki.SulokiMessage.option)
}
#endif
void SulokiMessage::set_option(const char* value) {
  set_has_option();
  option_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suloki.SulokiMessage.option)
}
void SulokiMessage::set_option(const char* value, size_t size) {
  set_has_option();
  option_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiMessage.option)
}
::std::string* SulokiMessage::mutable_option() {
  set_has_option();
  // @@protoc_insertion_point(field_mutable:suloki.SulokiMessage.option)
  return option_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SulokiMessage::release_option() {
  // @@protoc_insertion_point(field_release:suloki.SulokiMessage.option)
  clear_has_option();
  return option_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SulokiMessage::set_allocated_option(::std::string* option) {
  if (option != NULL) {
    set_has_option();
  } else {
    clear_has_option();
  }
  option_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), option);
  // @@protoc_insertion_point(field_set_allocated:suloki.SulokiMessage.option)
}

// repeated bytes reserved = 18;
int SulokiMessage::reserved_size() const {
  return reserved_.size();
}
void SulokiMessage::clear_reserved() {
  reserved_.Clear();
}
const ::std::string& SulokiMessage::reserved(int index) const {
  // @@protoc_insertion_point(field_get:suloki.SulokiMessage.reserved)
  return reserved_.Get(index);
}
::std::string* SulokiMessage::mutable_reserved(int index) {
  // @@protoc_insertion_point(field_mutable:suloki.SulokiMessage.reserved)
  return reserved_.Mutable(index);
}
void SulokiMessage::set_reserved(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:suloki.SulokiMessage.reserved)
  reserved_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void SulokiMessage::set_reserved(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:suloki.SulokiMessage.reserved)
  reserved_.Mutable(index)->assign(std::move(value));
}
#endif
void SulokiMessage::set_reserved(int index, const char* value) {
  reserved_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:suloki.SulokiMessage.reserved)
}
void SulokiMessage::set_reserved(int index, const void* value, size_t size) {
  reserved_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiMessage.reserved)
}
::std::string* SulokiMessage::add_reserved() {
  // @@protoc_insertion_point(field_add_mutable:suloki.SulokiMessage.reserved)
  return reserved_.Add();
}
void SulokiMessage::add_reserved(const ::std::string& value) {
  reserved_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:suloki.SulokiMessage.reserved)
}
#if LANG_CXX11
void SulokiMessage::add_reserved(::std::string&& value) {
  reserved_.Add()->assign(std::move(value));
  // @@protoc_insertion_point(field_add:suloki.SulokiMessage.reserved)
}
#endif
void SulokiMessage::add_reserved(const char* value) {
  reserved_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:suloki.SulokiMessage.reserved)
}
void SulokiMessage::add_reserved(const void* value, size_t size) {
  reserved_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:suloki.SulokiMessage.reserved)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
SulokiMessage::reserved() const {
  // @@protoc_insertion_point(field_list:suloki.SulokiMessage.reserved)
  return reserved_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
SulokiMessage::mutable_reserved() {
  // @@protoc_insertion_point(field_mutable_list:suloki.SulokiMessage.reserved)
  return &reserved_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SulokiTestMsgBody::kTestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SulokiTestMsgBody::SulokiTestMsgBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_suloki_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:suloki.SulokiTestMsgBody)
}
SulokiTestMsgBody::SulokiTestMsgBody(const SulokiTestMsgBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  test_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_test()) {
    test_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_);
  }
  // @@protoc_insertion_point(copy_constructor:suloki.SulokiTestMsgBody)
}

void SulokiTestMsgBody::SharedCtor() {
  _cached_size_ = 0;
  test_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SulokiTestMsgBody::~SulokiTestMsgBody() {
  // @@protoc_insertion_point(destructor:suloki.SulokiTestMsgBody)
  SharedDtor();
}

void SulokiTestMsgBody::SharedDtor() {
  test_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SulokiTestMsgBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SulokiTestMsgBody::descriptor() {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[1].descriptor;
}

const SulokiTestMsgBody& SulokiTestMsgBody::default_instance() {
  protobuf_suloki_2eproto::InitDefaults();
  return *internal_default_instance();
}

SulokiTestMsgBody* SulokiTestMsgBody::New(::google::protobuf::Arena* arena) const {
  SulokiTestMsgBody* n = new SulokiTestMsgBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SulokiTestMsgBody::Clear() {
// @@protoc_insertion_point(message_clear_start:suloki.SulokiTestMsgBody)
  if (has_test()) {
    GOOGLE_DCHECK(!test_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*test_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SulokiTestMsgBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suloki.SulokiTestMsgBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string test = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->test().data(), this->test().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suloki.SulokiTestMsgBody.test");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suloki.SulokiTestMsgBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suloki.SulokiTestMsgBody)
  return false;
#undef DO_
}

void SulokiTestMsgBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suloki.SulokiTestMsgBody)
  // required string test = 1;
  if (has_test()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test().data(), this->test().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiTestMsgBody.test");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->test(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:suloki.SulokiTestMsgBody)
}

::google::protobuf::uint8* SulokiTestMsgBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:suloki.SulokiTestMsgBody)
  // required string test = 1;
  if (has_test()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test().data(), this->test().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiTestMsgBody.test");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->test(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:suloki.SulokiTestMsgBody)
  return target;
}

size_t SulokiTestMsgBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:suloki.SulokiTestMsgBody)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required string test = 1;
  if (has_test()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->test());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SulokiTestMsgBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suloki.SulokiTestMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  const SulokiTestMsgBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SulokiTestMsgBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suloki.SulokiTestMsgBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suloki.SulokiTestMsgBody)
    MergeFrom(*source);
  }
}

void SulokiTestMsgBody::MergeFrom(const SulokiTestMsgBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suloki.SulokiTestMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_test()) {
    set_has_test();
    test_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_);
  }
}

void SulokiTestMsgBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suloki.SulokiTestMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SulokiTestMsgBody::CopyFrom(const SulokiTestMsgBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suloki.SulokiTestMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SulokiTestMsgBody::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SulokiTestMsgBody::Swap(SulokiTestMsgBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SulokiTestMsgBody::InternalSwap(SulokiTestMsgBody* other) {
  test_.Swap(&other->test_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SulokiTestMsgBody::GetMetadata() const {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SulokiTestMsgBody

// required string test = 1;
bool SulokiTestMsgBody::has_test() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SulokiTestMsgBody::set_has_test() {
  _has_bits_[0] |= 0x00000001u;
}
void SulokiTestMsgBody::clear_has_test() {
  _has_bits_[0] &= ~0x00000001u;
}
void SulokiTestMsgBody::clear_test() {
  test_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_test();
}
const ::std::string& SulokiTestMsgBody::test() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiTestMsgBody.test)
  return test_.GetNoArena();
}
void SulokiTestMsgBody::set_test(const ::std::string& value) {
  set_has_test();
  test_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suloki.SulokiTestMsgBody.test)
}
#if LANG_CXX11
void SulokiTestMsgBody::set_test(::std::string&& value) {
  set_has_test();
  test_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:suloki.SulokiTestMsgBody.test)
}
#endif
void SulokiTestMsgBody::set_test(const char* value) {
  set_has_test();
  test_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suloki.SulokiTestMsgBody.test)
}
void SulokiTestMsgBody::set_test(const char* value, size_t size) {
  set_has_test();
  test_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiTestMsgBody.test)
}
::std::string* SulokiTestMsgBody::mutable_test() {
  set_has_test();
  // @@protoc_insertion_point(field_mutable:suloki.SulokiTestMsgBody.test)
  return test_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SulokiTestMsgBody::release_test() {
  // @@protoc_insertion_point(field_release:suloki.SulokiTestMsgBody.test)
  clear_has_test();
  return test_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SulokiTestMsgBody::set_allocated_test(::std::string* test) {
  if (test != NULL) {
    set_has_test();
  } else {
    clear_has_test();
  }
  test_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), test);
  // @@protoc_insertion_point(field_set_allocated:suloki.SulokiTestMsgBody.test)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SulokiInitMsgBody::kInfomationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SulokiInitMsgBody::SulokiInitMsgBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_suloki_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:suloki.SulokiInitMsgBody)
}
SulokiInitMsgBody::SulokiInitMsgBody(const SulokiInitMsgBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  infomation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_infomation()) {
    infomation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.infomation_);
  }
  // @@protoc_insertion_point(copy_constructor:suloki.SulokiInitMsgBody)
}

void SulokiInitMsgBody::SharedCtor() {
  _cached_size_ = 0;
  infomation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SulokiInitMsgBody::~SulokiInitMsgBody() {
  // @@protoc_insertion_point(destructor:suloki.SulokiInitMsgBody)
  SharedDtor();
}

void SulokiInitMsgBody::SharedDtor() {
  infomation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SulokiInitMsgBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SulokiInitMsgBody::descriptor() {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[2].descriptor;
}

const SulokiInitMsgBody& SulokiInitMsgBody::default_instance() {
  protobuf_suloki_2eproto::InitDefaults();
  return *internal_default_instance();
}

SulokiInitMsgBody* SulokiInitMsgBody::New(::google::protobuf::Arena* arena) const {
  SulokiInitMsgBody* n = new SulokiInitMsgBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SulokiInitMsgBody::Clear() {
// @@protoc_insertion_point(message_clear_start:suloki.SulokiInitMsgBody)
  if (has_infomation()) {
    GOOGLE_DCHECK(!infomation_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*infomation_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SulokiInitMsgBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suloki.SulokiInitMsgBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string infomation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_infomation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->infomation().data(), this->infomation().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suloki.SulokiInitMsgBody.infomation");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suloki.SulokiInitMsgBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suloki.SulokiInitMsgBody)
  return false;
#undef DO_
}

void SulokiInitMsgBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suloki.SulokiInitMsgBody)
  // required string infomation = 1;
  if (has_infomation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->infomation().data(), this->infomation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiInitMsgBody.infomation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->infomation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:suloki.SulokiInitMsgBody)
}

::google::protobuf::uint8* SulokiInitMsgBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:suloki.SulokiInitMsgBody)
  // required string infomation = 1;
  if (has_infomation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->infomation().data(), this->infomation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiInitMsgBody.infomation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->infomation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:suloki.SulokiInitMsgBody)
  return target;
}

size_t SulokiInitMsgBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:suloki.SulokiInitMsgBody)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required string infomation = 1;
  if (has_infomation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->infomation());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SulokiInitMsgBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suloki.SulokiInitMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  const SulokiInitMsgBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SulokiInitMsgBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suloki.SulokiInitMsgBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suloki.SulokiInitMsgBody)
    MergeFrom(*source);
  }
}

void SulokiInitMsgBody::MergeFrom(const SulokiInitMsgBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suloki.SulokiInitMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_infomation()) {
    set_has_infomation();
    infomation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.infomation_);
  }
}

void SulokiInitMsgBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suloki.SulokiInitMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SulokiInitMsgBody::CopyFrom(const SulokiInitMsgBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suloki.SulokiInitMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SulokiInitMsgBody::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SulokiInitMsgBody::Swap(SulokiInitMsgBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SulokiInitMsgBody::InternalSwap(SulokiInitMsgBody* other) {
  infomation_.Swap(&other->infomation_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SulokiInitMsgBody::GetMetadata() const {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SulokiInitMsgBody

// required string infomation = 1;
bool SulokiInitMsgBody::has_infomation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SulokiInitMsgBody::set_has_infomation() {
  _has_bits_[0] |= 0x00000001u;
}
void SulokiInitMsgBody::clear_has_infomation() {
  _has_bits_[0] &= ~0x00000001u;
}
void SulokiInitMsgBody::clear_infomation() {
  infomation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_infomation();
}
const ::std::string& SulokiInitMsgBody::infomation() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiInitMsgBody.infomation)
  return infomation_.GetNoArena();
}
void SulokiInitMsgBody::set_infomation(const ::std::string& value) {
  set_has_infomation();
  infomation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suloki.SulokiInitMsgBody.infomation)
}
#if LANG_CXX11
void SulokiInitMsgBody::set_infomation(::std::string&& value) {
  set_has_infomation();
  infomation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:suloki.SulokiInitMsgBody.infomation)
}
#endif
void SulokiInitMsgBody::set_infomation(const char* value) {
  set_has_infomation();
  infomation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suloki.SulokiInitMsgBody.infomation)
}
void SulokiInitMsgBody::set_infomation(const char* value, size_t size) {
  set_has_infomation();
  infomation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiInitMsgBody.infomation)
}
::std::string* SulokiInitMsgBody::mutable_infomation() {
  set_has_infomation();
  // @@protoc_insertion_point(field_mutable:suloki.SulokiInitMsgBody.infomation)
  return infomation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SulokiInitMsgBody::release_infomation() {
  // @@protoc_insertion_point(field_release:suloki.SulokiInitMsgBody.infomation)
  clear_has_infomation();
  return infomation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SulokiInitMsgBody::set_allocated_infomation(::std::string* infomation) {
  if (infomation != NULL) {
    set_has_infomation();
  } else {
    clear_has_infomation();
  }
  infomation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), infomation);
  // @@protoc_insertion_point(field_set_allocated:suloki.SulokiInitMsgBody.infomation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SulokiStartMsgBody::kInfomationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SulokiStartMsgBody::SulokiStartMsgBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_suloki_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:suloki.SulokiStartMsgBody)
}
SulokiStartMsgBody::SulokiStartMsgBody(const SulokiStartMsgBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  infomation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_infomation()) {
    infomation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.infomation_);
  }
  // @@protoc_insertion_point(copy_constructor:suloki.SulokiStartMsgBody)
}

void SulokiStartMsgBody::SharedCtor() {
  _cached_size_ = 0;
  infomation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SulokiStartMsgBody::~SulokiStartMsgBody() {
  // @@protoc_insertion_point(destructor:suloki.SulokiStartMsgBody)
  SharedDtor();
}

void SulokiStartMsgBody::SharedDtor() {
  infomation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SulokiStartMsgBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SulokiStartMsgBody::descriptor() {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[3].descriptor;
}

const SulokiStartMsgBody& SulokiStartMsgBody::default_instance() {
  protobuf_suloki_2eproto::InitDefaults();
  return *internal_default_instance();
}

SulokiStartMsgBody* SulokiStartMsgBody::New(::google::protobuf::Arena* arena) const {
  SulokiStartMsgBody* n = new SulokiStartMsgBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SulokiStartMsgBody::Clear() {
// @@protoc_insertion_point(message_clear_start:suloki.SulokiStartMsgBody)
  if (has_infomation()) {
    GOOGLE_DCHECK(!infomation_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*infomation_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SulokiStartMsgBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suloki.SulokiStartMsgBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string infomation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_infomation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->infomation().data(), this->infomation().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suloki.SulokiStartMsgBody.infomation");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suloki.SulokiStartMsgBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suloki.SulokiStartMsgBody)
  return false;
#undef DO_
}

void SulokiStartMsgBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suloki.SulokiStartMsgBody)
  // required string infomation = 1;
  if (has_infomation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->infomation().data(), this->infomation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiStartMsgBody.infomation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->infomation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:suloki.SulokiStartMsgBody)
}

::google::protobuf::uint8* SulokiStartMsgBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:suloki.SulokiStartMsgBody)
  // required string infomation = 1;
  if (has_infomation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->infomation().data(), this->infomation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiStartMsgBody.infomation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->infomation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:suloki.SulokiStartMsgBody)
  return target;
}

size_t SulokiStartMsgBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:suloki.SulokiStartMsgBody)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required string infomation = 1;
  if (has_infomation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->infomation());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SulokiStartMsgBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suloki.SulokiStartMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  const SulokiStartMsgBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SulokiStartMsgBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suloki.SulokiStartMsgBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suloki.SulokiStartMsgBody)
    MergeFrom(*source);
  }
}

void SulokiStartMsgBody::MergeFrom(const SulokiStartMsgBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suloki.SulokiStartMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_infomation()) {
    set_has_infomation();
    infomation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.infomation_);
  }
}

void SulokiStartMsgBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suloki.SulokiStartMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SulokiStartMsgBody::CopyFrom(const SulokiStartMsgBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suloki.SulokiStartMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SulokiStartMsgBody::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SulokiStartMsgBody::Swap(SulokiStartMsgBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SulokiStartMsgBody::InternalSwap(SulokiStartMsgBody* other) {
  infomation_.Swap(&other->infomation_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SulokiStartMsgBody::GetMetadata() const {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SulokiStartMsgBody

// required string infomation = 1;
bool SulokiStartMsgBody::has_infomation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SulokiStartMsgBody::set_has_infomation() {
  _has_bits_[0] |= 0x00000001u;
}
void SulokiStartMsgBody::clear_has_infomation() {
  _has_bits_[0] &= ~0x00000001u;
}
void SulokiStartMsgBody::clear_infomation() {
  infomation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_infomation();
}
const ::std::string& SulokiStartMsgBody::infomation() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiStartMsgBody.infomation)
  return infomation_.GetNoArena();
}
void SulokiStartMsgBody::set_infomation(const ::std::string& value) {
  set_has_infomation();
  infomation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suloki.SulokiStartMsgBody.infomation)
}
#if LANG_CXX11
void SulokiStartMsgBody::set_infomation(::std::string&& value) {
  set_has_infomation();
  infomation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:suloki.SulokiStartMsgBody.infomation)
}
#endif
void SulokiStartMsgBody::set_infomation(const char* value) {
  set_has_infomation();
  infomation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suloki.SulokiStartMsgBody.infomation)
}
void SulokiStartMsgBody::set_infomation(const char* value, size_t size) {
  set_has_infomation();
  infomation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiStartMsgBody.infomation)
}
::std::string* SulokiStartMsgBody::mutable_infomation() {
  set_has_infomation();
  // @@protoc_insertion_point(field_mutable:suloki.SulokiStartMsgBody.infomation)
  return infomation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SulokiStartMsgBody::release_infomation() {
  // @@protoc_insertion_point(field_release:suloki.SulokiStartMsgBody.infomation)
  clear_has_infomation();
  return infomation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SulokiStartMsgBody::set_allocated_infomation(::std::string* infomation) {
  if (infomation != NULL) {
    set_has_infomation();
  } else {
    clear_has_infomation();
  }
  infomation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), infomation);
  // @@protoc_insertion_point(field_set_allocated:suloki.SulokiStartMsgBody.infomation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SulokiStopMsgBody::kInfomationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SulokiStopMsgBody::SulokiStopMsgBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_suloki_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:suloki.SulokiStopMsgBody)
}
SulokiStopMsgBody::SulokiStopMsgBody(const SulokiStopMsgBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  infomation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_infomation()) {
    infomation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.infomation_);
  }
  // @@protoc_insertion_point(copy_constructor:suloki.SulokiStopMsgBody)
}

void SulokiStopMsgBody::SharedCtor() {
  _cached_size_ = 0;
  infomation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SulokiStopMsgBody::~SulokiStopMsgBody() {
  // @@protoc_insertion_point(destructor:suloki.SulokiStopMsgBody)
  SharedDtor();
}

void SulokiStopMsgBody::SharedDtor() {
  infomation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SulokiStopMsgBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SulokiStopMsgBody::descriptor() {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[4].descriptor;
}

const SulokiStopMsgBody& SulokiStopMsgBody::default_instance() {
  protobuf_suloki_2eproto::InitDefaults();
  return *internal_default_instance();
}

SulokiStopMsgBody* SulokiStopMsgBody::New(::google::protobuf::Arena* arena) const {
  SulokiStopMsgBody* n = new SulokiStopMsgBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SulokiStopMsgBody::Clear() {
// @@protoc_insertion_point(message_clear_start:suloki.SulokiStopMsgBody)
  if (has_infomation()) {
    GOOGLE_DCHECK(!infomation_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*infomation_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SulokiStopMsgBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suloki.SulokiStopMsgBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string infomation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_infomation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->infomation().data(), this->infomation().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suloki.SulokiStopMsgBody.infomation");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suloki.SulokiStopMsgBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suloki.SulokiStopMsgBody)
  return false;
#undef DO_
}

void SulokiStopMsgBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suloki.SulokiStopMsgBody)
  // required string infomation = 1;
  if (has_infomation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->infomation().data(), this->infomation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiStopMsgBody.infomation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->infomation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:suloki.SulokiStopMsgBody)
}

::google::protobuf::uint8* SulokiStopMsgBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:suloki.SulokiStopMsgBody)
  // required string infomation = 1;
  if (has_infomation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->infomation().data(), this->infomation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiStopMsgBody.infomation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->infomation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:suloki.SulokiStopMsgBody)
  return target;
}

size_t SulokiStopMsgBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:suloki.SulokiStopMsgBody)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required string infomation = 1;
  if (has_infomation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->infomation());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SulokiStopMsgBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suloki.SulokiStopMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  const SulokiStopMsgBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SulokiStopMsgBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suloki.SulokiStopMsgBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suloki.SulokiStopMsgBody)
    MergeFrom(*source);
  }
}

void SulokiStopMsgBody::MergeFrom(const SulokiStopMsgBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suloki.SulokiStopMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_infomation()) {
    set_has_infomation();
    infomation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.infomation_);
  }
}

void SulokiStopMsgBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suloki.SulokiStopMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SulokiStopMsgBody::CopyFrom(const SulokiStopMsgBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suloki.SulokiStopMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SulokiStopMsgBody::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SulokiStopMsgBody::Swap(SulokiStopMsgBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SulokiStopMsgBody::InternalSwap(SulokiStopMsgBody* other) {
  infomation_.Swap(&other->infomation_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SulokiStopMsgBody::GetMetadata() const {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SulokiStopMsgBody

// required string infomation = 1;
bool SulokiStopMsgBody::has_infomation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SulokiStopMsgBody::set_has_infomation() {
  _has_bits_[0] |= 0x00000001u;
}
void SulokiStopMsgBody::clear_has_infomation() {
  _has_bits_[0] &= ~0x00000001u;
}
void SulokiStopMsgBody::clear_infomation() {
  infomation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_infomation();
}
const ::std::string& SulokiStopMsgBody::infomation() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiStopMsgBody.infomation)
  return infomation_.GetNoArena();
}
void SulokiStopMsgBody::set_infomation(const ::std::string& value) {
  set_has_infomation();
  infomation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suloki.SulokiStopMsgBody.infomation)
}
#if LANG_CXX11
void SulokiStopMsgBody::set_infomation(::std::string&& value) {
  set_has_infomation();
  infomation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:suloki.SulokiStopMsgBody.infomation)
}
#endif
void SulokiStopMsgBody::set_infomation(const char* value) {
  set_has_infomation();
  infomation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suloki.SulokiStopMsgBody.infomation)
}
void SulokiStopMsgBody::set_infomation(const char* value, size_t size) {
  set_has_infomation();
  infomation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiStopMsgBody.infomation)
}
::std::string* SulokiStopMsgBody::mutable_infomation() {
  set_has_infomation();
  // @@protoc_insertion_point(field_mutable:suloki.SulokiStopMsgBody.infomation)
  return infomation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SulokiStopMsgBody::release_infomation() {
  // @@protoc_insertion_point(field_release:suloki.SulokiStopMsgBody.infomation)
  clear_has_infomation();
  return infomation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SulokiStopMsgBody::set_allocated_infomation(::std::string* infomation) {
  if (infomation != NULL) {
    set_has_infomation();
  } else {
    clear_has_infomation();
  }
  infomation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), infomation);
  // @@protoc_insertion_point(field_set_allocated:suloki.SulokiStopMsgBody.infomation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SulokiClearMsgBody::kInfomationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SulokiClearMsgBody::SulokiClearMsgBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_suloki_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:suloki.SulokiClearMsgBody)
}
SulokiClearMsgBody::SulokiClearMsgBody(const SulokiClearMsgBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  infomation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_infomation()) {
    infomation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.infomation_);
  }
  // @@protoc_insertion_point(copy_constructor:suloki.SulokiClearMsgBody)
}

void SulokiClearMsgBody::SharedCtor() {
  _cached_size_ = 0;
  infomation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SulokiClearMsgBody::~SulokiClearMsgBody() {
  // @@protoc_insertion_point(destructor:suloki.SulokiClearMsgBody)
  SharedDtor();
}

void SulokiClearMsgBody::SharedDtor() {
  infomation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SulokiClearMsgBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SulokiClearMsgBody::descriptor() {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[5].descriptor;
}

const SulokiClearMsgBody& SulokiClearMsgBody::default_instance() {
  protobuf_suloki_2eproto::InitDefaults();
  return *internal_default_instance();
}

SulokiClearMsgBody* SulokiClearMsgBody::New(::google::protobuf::Arena* arena) const {
  SulokiClearMsgBody* n = new SulokiClearMsgBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SulokiClearMsgBody::Clear() {
// @@protoc_insertion_point(message_clear_start:suloki.SulokiClearMsgBody)
  if (has_infomation()) {
    GOOGLE_DCHECK(!infomation_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*infomation_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SulokiClearMsgBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suloki.SulokiClearMsgBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string infomation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_infomation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->infomation().data(), this->infomation().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suloki.SulokiClearMsgBody.infomation");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suloki.SulokiClearMsgBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suloki.SulokiClearMsgBody)
  return false;
#undef DO_
}

void SulokiClearMsgBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suloki.SulokiClearMsgBody)
  // required string infomation = 1;
  if (has_infomation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->infomation().data(), this->infomation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiClearMsgBody.infomation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->infomation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:suloki.SulokiClearMsgBody)
}

::google::protobuf::uint8* SulokiClearMsgBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:suloki.SulokiClearMsgBody)
  // required string infomation = 1;
  if (has_infomation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->infomation().data(), this->infomation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiClearMsgBody.infomation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->infomation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:suloki.SulokiClearMsgBody)
  return target;
}

size_t SulokiClearMsgBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:suloki.SulokiClearMsgBody)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required string infomation = 1;
  if (has_infomation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->infomation());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SulokiClearMsgBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suloki.SulokiClearMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  const SulokiClearMsgBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SulokiClearMsgBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suloki.SulokiClearMsgBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suloki.SulokiClearMsgBody)
    MergeFrom(*source);
  }
}

void SulokiClearMsgBody::MergeFrom(const SulokiClearMsgBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suloki.SulokiClearMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_infomation()) {
    set_has_infomation();
    infomation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.infomation_);
  }
}

void SulokiClearMsgBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suloki.SulokiClearMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SulokiClearMsgBody::CopyFrom(const SulokiClearMsgBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suloki.SulokiClearMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SulokiClearMsgBody::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SulokiClearMsgBody::Swap(SulokiClearMsgBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SulokiClearMsgBody::InternalSwap(SulokiClearMsgBody* other) {
  infomation_.Swap(&other->infomation_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SulokiClearMsgBody::GetMetadata() const {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SulokiClearMsgBody

// required string infomation = 1;
bool SulokiClearMsgBody::has_infomation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SulokiClearMsgBody::set_has_infomation() {
  _has_bits_[0] |= 0x00000001u;
}
void SulokiClearMsgBody::clear_has_infomation() {
  _has_bits_[0] &= ~0x00000001u;
}
void SulokiClearMsgBody::clear_infomation() {
  infomation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_infomation();
}
const ::std::string& SulokiClearMsgBody::infomation() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiClearMsgBody.infomation)
  return infomation_.GetNoArena();
}
void SulokiClearMsgBody::set_infomation(const ::std::string& value) {
  set_has_infomation();
  infomation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suloki.SulokiClearMsgBody.infomation)
}
#if LANG_CXX11
void SulokiClearMsgBody::set_infomation(::std::string&& value) {
  set_has_infomation();
  infomation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:suloki.SulokiClearMsgBody.infomation)
}
#endif
void SulokiClearMsgBody::set_infomation(const char* value) {
  set_has_infomation();
  infomation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suloki.SulokiClearMsgBody.infomation)
}
void SulokiClearMsgBody::set_infomation(const char* value, size_t size) {
  set_has_infomation();
  infomation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiClearMsgBody.infomation)
}
::std::string* SulokiClearMsgBody::mutable_infomation() {
  set_has_infomation();
  // @@protoc_insertion_point(field_mutable:suloki.SulokiClearMsgBody.infomation)
  return infomation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SulokiClearMsgBody::release_infomation() {
  // @@protoc_insertion_point(field_release:suloki.SulokiClearMsgBody.infomation)
  clear_has_infomation();
  return infomation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SulokiClearMsgBody::set_allocated_infomation(::std::string* infomation) {
  if (infomation != NULL) {
    set_has_infomation();
  } else {
    clear_has_infomation();
  }
  infomation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), infomation);
  // @@protoc_insertion_point(field_set_allocated:suloki.SulokiClearMsgBody.infomation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SulokiContext::kUrNameFieldNumber;
const int SulokiContext::kIdFieldNumber;
const int SulokiContext::kBFieldNumber;
const int SulokiContext::kContextFieldNumber;
const int SulokiContext::kMsgOriFieldNumber;
const int SulokiContext::kReservedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SulokiContext::SulokiContext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_suloki_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:suloki.SulokiContext)
}
SulokiContext::SulokiContext(const SulokiContext& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      reserved_(from.reserved_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  urname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_urname()) {
    urname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.urname_);
  }
  context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_context()) {
    context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.context_);
  }
  if (from.has_msgori()) {
    msgori_ = new ::suloki::SulokiMessage(*from.msgori_);
  } else {
    msgori_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&id_) + sizeof(b_));
  // @@protoc_insertion_point(copy_constructor:suloki.SulokiContext)
}

void SulokiContext::SharedCtor() {
  _cached_size_ = 0;
  urname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgori_, 0, reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&msgori_) + sizeof(b_));
}

SulokiContext::~SulokiContext() {
  // @@protoc_insertion_point(destructor:suloki.SulokiContext)
  SharedDtor();
}

void SulokiContext::SharedDtor() {
  urname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete msgori_;
  }
}

void SulokiContext::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SulokiContext::descriptor() {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[6].descriptor;
}

const SulokiContext& SulokiContext::default_instance() {
  protobuf_suloki_2eproto::InitDefaults();
  return *internal_default_instance();
}

SulokiContext* SulokiContext::New(::google::protobuf::Arena* arena) const {
  SulokiContext* n = new SulokiContext;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SulokiContext::Clear() {
// @@protoc_insertion_point(message_clear_start:suloki.SulokiContext)
  reserved_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_urname()) {
      GOOGLE_DCHECK(!urname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*urname_.UnsafeRawStringPointer())->clear();
    }
    if (has_context()) {
      GOOGLE_DCHECK(!context_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*context_.UnsafeRawStringPointer())->clear();
    }
    if (has_msgori()) {
      GOOGLE_DCHECK(msgori_ != NULL);
      msgori_->::suloki::SulokiMessage::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 24u) {
    ::memset(&id_, 0, reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&id_) + sizeof(b_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SulokiContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suloki.SulokiContext)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string urName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_urname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->urname().data(), this->urname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suloki.SulokiContext.urName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool b = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_b();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string context = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_context()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->context().data(), this->context().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suloki.SulokiContext.context");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .suloki.SulokiMessage msgOri = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msgori()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes reserved = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_reserved()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suloki.SulokiContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suloki.SulokiContext)
  return false;
#undef DO_
}

void SulokiContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suloki.SulokiContext)
  // optional string urName = 1;
  if (has_urname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->urname().data(), this->urname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiContext.urName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->urname(), output);
  }

  // optional sint64 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->id(), output);
  }

  // optional bool b = 3;
  if (has_b()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->b(), output);
  }

  // optional string context = 4;
  if (has_context()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->context().data(), this->context().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiContext.context");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->context(), output);
  }

  // optional .suloki.SulokiMessage msgOri = 5;
  if (has_msgori()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->msgori_, output);
  }

  // repeated bytes reserved = 6;
  for (int i = 0, n = this->reserved_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      6, this->reserved(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:suloki.SulokiContext)
}

::google::protobuf::uint8* SulokiContext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:suloki.SulokiContext)
  // optional string urName = 1;
  if (has_urname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->urname().data(), this->urname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiContext.urName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->urname(), target);
  }

  // optional sint64 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->id(), target);
  }

  // optional bool b = 3;
  if (has_b()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->b(), target);
  }

  // optional string context = 4;
  if (has_context()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->context().data(), this->context().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiContext.context");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->context(), target);
  }

  // optional .suloki.SulokiMessage msgOri = 5;
  if (has_msgori()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->msgori_, false, target);
  }

  // repeated bytes reserved = 6;
  for (int i = 0, n = this->reserved_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(6, this->reserved(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:suloki.SulokiContext)
  return target;
}

size_t SulokiContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:suloki.SulokiContext)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated bytes reserved = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->reserved_size());
  for (int i = 0, n = this->reserved_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->reserved(i));
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional string urName = 1;
    if (has_urname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->urname());
    }

    // optional string context = 4;
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->context());
    }

    // optional .suloki.SulokiMessage msgOri = 5;
    if (has_msgori()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->msgori_);
    }

    // optional sint64 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->id());
    }

    // optional bool b = 3;
    if (has_b()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SulokiContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suloki.SulokiContext)
  GOOGLE_DCHECK_NE(&from, this);
  const SulokiContext* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SulokiContext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suloki.SulokiContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suloki.SulokiContext)
    MergeFrom(*source);
  }
}

void SulokiContext::MergeFrom(const SulokiContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suloki.SulokiContext)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reserved_.MergeFrom(from.reserved_);
  if (from._has_bits_[0 / 32] & 31u) {
    if (from.has_urname()) {
      set_has_urname();
      urname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.urname_);
    }
    if (from.has_context()) {
      set_has_context();
      context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.context_);
    }
    if (from.has_msgori()) {
      mutable_msgori()->::suloki::SulokiMessage::MergeFrom(from.msgori());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_b()) {
      set_b(from.b());
    }
  }
}

void SulokiContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suloki.SulokiContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SulokiContext::CopyFrom(const SulokiContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suloki.SulokiContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SulokiContext::IsInitialized() const {
  if (has_msgori()) {
    if (!this->msgori_->IsInitialized()) return false;
  }
  return true;
}

void SulokiContext::Swap(SulokiContext* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SulokiContext::InternalSwap(SulokiContext* other) {
  reserved_.UnsafeArenaSwap(&other->reserved_);
  urname_.Swap(&other->urname_);
  context_.Swap(&other->context_);
  std::swap(msgori_, other->msgori_);
  std::swap(id_, other->id_);
  std::swap(b_, other->b_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SulokiContext::GetMetadata() const {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SulokiContext

// optional string urName = 1;
bool SulokiContext::has_urname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SulokiContext::set_has_urname() {
  _has_bits_[0] |= 0x00000001u;
}
void SulokiContext::clear_has_urname() {
  _has_bits_[0] &= ~0x00000001u;
}
void SulokiContext::clear_urname() {
  urname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_urname();
}
const ::std::string& SulokiContext::urname() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiContext.urName)
  return urname_.GetNoArena();
}
void SulokiContext::set_urname(const ::std::string& value) {
  set_has_urname();
  urname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suloki.SulokiContext.urName)
}
#if LANG_CXX11
void SulokiContext::set_urname(::std::string&& value) {
  set_has_urname();
  urname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:suloki.SulokiContext.urName)
}
#endif
void SulokiContext::set_urname(const char* value) {
  set_has_urname();
  urname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suloki.SulokiContext.urName)
}
void SulokiContext::set_urname(const char* value, size_t size) {
  set_has_urname();
  urname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiContext.urName)
}
::std::string* SulokiContext::mutable_urname() {
  set_has_urname();
  // @@protoc_insertion_point(field_mutable:suloki.SulokiContext.urName)
  return urname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SulokiContext::release_urname() {
  // @@protoc_insertion_point(field_release:suloki.SulokiContext.urName)
  clear_has_urname();
  return urname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SulokiContext::set_allocated_urname(::std::string* urname) {
  if (urname != NULL) {
    set_has_urname();
  } else {
    clear_has_urname();
  }
  urname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), urname);
  // @@protoc_insertion_point(field_set_allocated:suloki.SulokiContext.urName)
}

// optional sint64 id = 2;
bool SulokiContext::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SulokiContext::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
void SulokiContext::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void SulokiContext::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
::google::protobuf::int64 SulokiContext::id() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiContext.id)
  return id_;
}
void SulokiContext::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:suloki.SulokiContext.id)
}

// optional bool b = 3;
bool SulokiContext::has_b() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SulokiContext::set_has_b() {
  _has_bits_[0] |= 0x00000010u;
}
void SulokiContext::clear_has_b() {
  _has_bits_[0] &= ~0x00000010u;
}
void SulokiContext::clear_b() {
  b_ = false;
  clear_has_b();
}
bool SulokiContext::b() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiContext.b)
  return b_;
}
void SulokiContext::set_b(bool value) {
  set_has_b();
  b_ = value;
  // @@protoc_insertion_point(field_set:suloki.SulokiContext.b)
}

// optional string context = 4;
bool SulokiContext::has_context() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SulokiContext::set_has_context() {
  _has_bits_[0] |= 0x00000002u;
}
void SulokiContext::clear_has_context() {
  _has_bits_[0] &= ~0x00000002u;
}
void SulokiContext::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_context();
}
const ::std::string& SulokiContext::context() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiContext.context)
  return context_.GetNoArena();
}
void SulokiContext::set_context(const ::std::string& value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suloki.SulokiContext.context)
}
#if LANG_CXX11
void SulokiContext::set_context(::std::string&& value) {
  set_has_context();
  context_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:suloki.SulokiContext.context)
}
#endif
void SulokiContext::set_context(const char* value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suloki.SulokiContext.context)
}
void SulokiContext::set_context(const char* value, size_t size) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiContext.context)
}
::std::string* SulokiContext::mutable_context() {
  set_has_context();
  // @@protoc_insertion_point(field_mutable:suloki.SulokiContext.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SulokiContext::release_context() {
  // @@protoc_insertion_point(field_release:suloki.SulokiContext.context)
  clear_has_context();
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SulokiContext::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    set_has_context();
  } else {
    clear_has_context();
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:suloki.SulokiContext.context)
}

// optional .suloki.SulokiMessage msgOri = 5;
bool SulokiContext::has_msgori() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SulokiContext::set_has_msgori() {
  _has_bits_[0] |= 0x00000004u;
}
void SulokiContext::clear_has_msgori() {
  _has_bits_[0] &= ~0x00000004u;
}
void SulokiContext::clear_msgori() {
  if (msgori_ != NULL) msgori_->::suloki::SulokiMessage::Clear();
  clear_has_msgori();
}
const ::suloki::SulokiMessage& SulokiContext::msgori() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiContext.msgOri)
  return msgori_ != NULL ? *msgori_
                         : *::suloki::SulokiMessage::internal_default_instance();
}
::suloki::SulokiMessage* SulokiContext::mutable_msgori() {
  set_has_msgori();
  if (msgori_ == NULL) {
    msgori_ = new ::suloki::SulokiMessage;
  }
  // @@protoc_insertion_point(field_mutable:suloki.SulokiContext.msgOri)
  return msgori_;
}
::suloki::SulokiMessage* SulokiContext::release_msgori() {
  // @@protoc_insertion_point(field_release:suloki.SulokiContext.msgOri)
  clear_has_msgori();
  ::suloki::SulokiMessage* temp = msgori_;
  msgori_ = NULL;
  return temp;
}
void SulokiContext::set_allocated_msgori(::suloki::SulokiMessage* msgori) {
  delete msgori_;
  msgori_ = msgori;
  if (msgori) {
    set_has_msgori();
  } else {
    clear_has_msgori();
  }
  // @@protoc_insertion_point(field_set_allocated:suloki.SulokiContext.msgOri)
}

// repeated bytes reserved = 6;
int SulokiContext::reserved_size() const {
  return reserved_.size();
}
void SulokiContext::clear_reserved() {
  reserved_.Clear();
}
const ::std::string& SulokiContext::reserved(int index) const {
  // @@protoc_insertion_point(field_get:suloki.SulokiContext.reserved)
  return reserved_.Get(index);
}
::std::string* SulokiContext::mutable_reserved(int index) {
  // @@protoc_insertion_point(field_mutable:suloki.SulokiContext.reserved)
  return reserved_.Mutable(index);
}
void SulokiContext::set_reserved(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:suloki.SulokiContext.reserved)
  reserved_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void SulokiContext::set_reserved(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:suloki.SulokiContext.reserved)
  reserved_.Mutable(index)->assign(std::move(value));
}
#endif
void SulokiContext::set_reserved(int index, const char* value) {
  reserved_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:suloki.SulokiContext.reserved)
}
void SulokiContext::set_reserved(int index, const void* value, size_t size) {
  reserved_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiContext.reserved)
}
::std::string* SulokiContext::add_reserved() {
  // @@protoc_insertion_point(field_add_mutable:suloki.SulokiContext.reserved)
  return reserved_.Add();
}
void SulokiContext::add_reserved(const ::std::string& value) {
  reserved_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:suloki.SulokiContext.reserved)
}
#if LANG_CXX11
void SulokiContext::add_reserved(::std::string&& value) {
  reserved_.Add()->assign(std::move(value));
  // @@protoc_insertion_point(field_add:suloki.SulokiContext.reserved)
}
#endif
void SulokiContext::add_reserved(const char* value) {
  reserved_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:suloki.SulokiContext.reserved)
}
void SulokiContext::add_reserved(const void* value, size_t size) {
  reserved_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:suloki.SulokiContext.reserved)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
SulokiContext::reserved() const {
  // @@protoc_insertion_point(field_list:suloki.SulokiContext.reserved)
  return reserved_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
SulokiContext::mutable_reserved() {
  // @@protoc_insertion_point(field_mutable_list:suloki.SulokiContext.reserved)
  return &reserved_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SulokiOperatorUrcMsgBody::SulokiOperatorUrcMsgBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_suloki_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:suloki.SulokiOperatorUrcMsgBody)
}
SulokiOperatorUrcMsgBody::SulokiOperatorUrcMsgBody(const SulokiOperatorUrcMsgBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:suloki.SulokiOperatorUrcMsgBody)
}

void SulokiOperatorUrcMsgBody::SharedCtor() {
  _cached_size_ = 0;
}

SulokiOperatorUrcMsgBody::~SulokiOperatorUrcMsgBody() {
  // @@protoc_insertion_point(destructor:suloki.SulokiOperatorUrcMsgBody)
  SharedDtor();
}

void SulokiOperatorUrcMsgBody::SharedDtor() {
}

void SulokiOperatorUrcMsgBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SulokiOperatorUrcMsgBody::descriptor() {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[7].descriptor;
}

const SulokiOperatorUrcMsgBody& SulokiOperatorUrcMsgBody::default_instance() {
  protobuf_suloki_2eproto::InitDefaults();
  return *internal_default_instance();
}

SulokiOperatorUrcMsgBody* SulokiOperatorUrcMsgBody::New(::google::protobuf::Arena* arena) const {
  SulokiOperatorUrcMsgBody* n = new SulokiOperatorUrcMsgBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SulokiOperatorUrcMsgBody::Clear() {
// @@protoc_insertion_point(message_clear_start:suloki.SulokiOperatorUrcMsgBody)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SulokiOperatorUrcMsgBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suloki.SulokiOperatorUrcMsgBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:suloki.SulokiOperatorUrcMsgBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suloki.SulokiOperatorUrcMsgBody)
  return false;
#undef DO_
}

void SulokiOperatorUrcMsgBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suloki.SulokiOperatorUrcMsgBody)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:suloki.SulokiOperatorUrcMsgBody)
}

::google::protobuf::uint8* SulokiOperatorUrcMsgBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:suloki.SulokiOperatorUrcMsgBody)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:suloki.SulokiOperatorUrcMsgBody)
  return target;
}

size_t SulokiOperatorUrcMsgBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:suloki.SulokiOperatorUrcMsgBody)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SulokiOperatorUrcMsgBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suloki.SulokiOperatorUrcMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  const SulokiOperatorUrcMsgBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SulokiOperatorUrcMsgBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suloki.SulokiOperatorUrcMsgBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suloki.SulokiOperatorUrcMsgBody)
    MergeFrom(*source);
  }
}

void SulokiOperatorUrcMsgBody::MergeFrom(const SulokiOperatorUrcMsgBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suloki.SulokiOperatorUrcMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void SulokiOperatorUrcMsgBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suloki.SulokiOperatorUrcMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SulokiOperatorUrcMsgBody::CopyFrom(const SulokiOperatorUrcMsgBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suloki.SulokiOperatorUrcMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SulokiOperatorUrcMsgBody::IsInitialized() const {
  return true;
}

void SulokiOperatorUrcMsgBody::Swap(SulokiOperatorUrcMsgBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SulokiOperatorUrcMsgBody::InternalSwap(SulokiOperatorUrcMsgBody* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SulokiOperatorUrcMsgBody::GetMetadata() const {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SulokiOperatorUrcMsgBody

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SulokiServiceStateUrcMsgBody::kIpFieldNumber;
const int SulokiServiceStateUrcMsgBody::kPortFieldNumber;
const int SulokiServiceStateUrcMsgBody::kBusyDegreeFieldNumber;
const int SulokiServiceStateUrcMsgBody::kUrNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SulokiServiceStateUrcMsgBody::SulokiServiceStateUrcMsgBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_suloki_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:suloki.SulokiServiceStateUrcMsgBody)
}
SulokiServiceStateUrcMsgBody::SulokiServiceStateUrcMsgBody(const SulokiServiceStateUrcMsgBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip()) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  urname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_urname()) {
    urname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.urname_);
  }
  ::memcpy(&port_, &from.port_,
    reinterpret_cast<char*>(&busydegree_) -
    reinterpret_cast<char*>(&port_) + sizeof(busydegree_));
  // @@protoc_insertion_point(copy_constructor:suloki.SulokiServiceStateUrcMsgBody)
}

void SulokiServiceStateUrcMsgBody::SharedCtor() {
  _cached_size_ = 0;
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  urname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, reinterpret_cast<char*>(&busydegree_) -
    reinterpret_cast<char*>(&port_) + sizeof(busydegree_));
}

SulokiServiceStateUrcMsgBody::~SulokiServiceStateUrcMsgBody() {
  // @@protoc_insertion_point(destructor:suloki.SulokiServiceStateUrcMsgBody)
  SharedDtor();
}

void SulokiServiceStateUrcMsgBody::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  urname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SulokiServiceStateUrcMsgBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SulokiServiceStateUrcMsgBody::descriptor() {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[8].descriptor;
}

const SulokiServiceStateUrcMsgBody& SulokiServiceStateUrcMsgBody::default_instance() {
  protobuf_suloki_2eproto::InitDefaults();
  return *internal_default_instance();
}

SulokiServiceStateUrcMsgBody* SulokiServiceStateUrcMsgBody::New(::google::protobuf::Arena* arena) const {
  SulokiServiceStateUrcMsgBody* n = new SulokiServiceStateUrcMsgBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SulokiServiceStateUrcMsgBody::Clear() {
// @@protoc_insertion_point(message_clear_start:suloki.SulokiServiceStateUrcMsgBody)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_ip()) {
      GOOGLE_DCHECK(!ip_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ip_.UnsafeRawStringPointer())->clear();
    }
    if (has_urname()) {
      GOOGLE_DCHECK(!urname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*urname_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&port_, 0, reinterpret_cast<char*>(&busydegree_) -
      reinterpret_cast<char*>(&port_) + sizeof(busydegree_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SulokiServiceStateUrcMsgBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suloki.SulokiServiceStateUrcMsgBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suloki.SulokiServiceStateUrcMsgBody.ip");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 busyDegree = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_busydegree();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &busydegree_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string urName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_urname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->urname().data(), this->urname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suloki.SulokiServiceStateUrcMsgBody.urName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suloki.SulokiServiceStateUrcMsgBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suloki.SulokiServiceStateUrcMsgBody)
  return false;
#undef DO_
}

void SulokiServiceStateUrcMsgBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suloki.SulokiServiceStateUrcMsgBody)
  // optional string ip = 1;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiServiceStateUrcMsgBody.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip(), output);
  }

  // optional uint32 port = 2;
  if (has_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->port(), output);
  }

  // optional sint32 busyDegree = 3;
  if (has_busydegree()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->busydegree(), output);
  }

  // optional string urName = 4;
  if (has_urname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->urname().data(), this->urname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiServiceStateUrcMsgBody.urName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->urname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:suloki.SulokiServiceStateUrcMsgBody)
}

::google::protobuf::uint8* SulokiServiceStateUrcMsgBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:suloki.SulokiServiceStateUrcMsgBody)
  // optional string ip = 1;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiServiceStateUrcMsgBody.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip(), target);
  }

  // optional uint32 port = 2;
  if (has_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->port(), target);
  }

  // optional sint32 busyDegree = 3;
  if (has_busydegree()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->busydegree(), target);
  }

  // optional string urName = 4;
  if (has_urname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->urname().data(), this->urname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiServiceStateUrcMsgBody.urName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->urname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:suloki.SulokiServiceStateUrcMsgBody)
  return target;
}

size_t SulokiServiceStateUrcMsgBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:suloki.SulokiServiceStateUrcMsgBody)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string ip = 1;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

    // optional string urName = 4;
    if (has_urname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->urname());
    }

    // optional uint32 port = 2;
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->port());
    }

    // optional sint32 busyDegree = 3;
    if (has_busydegree()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->busydegree());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SulokiServiceStateUrcMsgBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suloki.SulokiServiceStateUrcMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  const SulokiServiceStateUrcMsgBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SulokiServiceStateUrcMsgBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suloki.SulokiServiceStateUrcMsgBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suloki.SulokiServiceStateUrcMsgBody)
    MergeFrom(*source);
  }
}

void SulokiServiceStateUrcMsgBody::MergeFrom(const SulokiServiceStateUrcMsgBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suloki.SulokiServiceStateUrcMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_ip()) {
      set_has_ip();
      ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
    }
    if (from.has_urname()) {
      set_has_urname();
      urname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.urname_);
    }
    if (from.has_port()) {
      set_port(from.port());
    }
    if (from.has_busydegree()) {
      set_busydegree(from.busydegree());
    }
  }
}

void SulokiServiceStateUrcMsgBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suloki.SulokiServiceStateUrcMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SulokiServiceStateUrcMsgBody::CopyFrom(const SulokiServiceStateUrcMsgBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suloki.SulokiServiceStateUrcMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SulokiServiceStateUrcMsgBody::IsInitialized() const {
  return true;
}

void SulokiServiceStateUrcMsgBody::Swap(SulokiServiceStateUrcMsgBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SulokiServiceStateUrcMsgBody::InternalSwap(SulokiServiceStateUrcMsgBody* other) {
  ip_.Swap(&other->ip_);
  urname_.Swap(&other->urname_);
  std::swap(port_, other->port_);
  std::swap(busydegree_, other->busydegree_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SulokiServiceStateUrcMsgBody::GetMetadata() const {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SulokiServiceStateUrcMsgBody

// optional string ip = 1;
bool SulokiServiceStateUrcMsgBody::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SulokiServiceStateUrcMsgBody::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
void SulokiServiceStateUrcMsgBody::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
void SulokiServiceStateUrcMsgBody::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
const ::std::string& SulokiServiceStateUrcMsgBody::ip() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiServiceStateUrcMsgBody.ip)
  return ip_.GetNoArena();
}
void SulokiServiceStateUrcMsgBody::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suloki.SulokiServiceStateUrcMsgBody.ip)
}
#if LANG_CXX11
void SulokiServiceStateUrcMsgBody::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:suloki.SulokiServiceStateUrcMsgBody.ip)
}
#endif
void SulokiServiceStateUrcMsgBody::set_ip(const char* value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suloki.SulokiServiceStateUrcMsgBody.ip)
}
void SulokiServiceStateUrcMsgBody::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiServiceStateUrcMsgBody.ip)
}
::std::string* SulokiServiceStateUrcMsgBody::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:suloki.SulokiServiceStateUrcMsgBody.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SulokiServiceStateUrcMsgBody::release_ip() {
  // @@protoc_insertion_point(field_release:suloki.SulokiServiceStateUrcMsgBody.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SulokiServiceStateUrcMsgBody::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:suloki.SulokiServiceStateUrcMsgBody.ip)
}

// optional uint32 port = 2;
bool SulokiServiceStateUrcMsgBody::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SulokiServiceStateUrcMsgBody::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
void SulokiServiceStateUrcMsgBody::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
void SulokiServiceStateUrcMsgBody::clear_port() {
  port_ = 0u;
  clear_has_port();
}
::google::protobuf::uint32 SulokiServiceStateUrcMsgBody::port() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiServiceStateUrcMsgBody.port)
  return port_;
}
void SulokiServiceStateUrcMsgBody::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:suloki.SulokiServiceStateUrcMsgBody.port)
}

// optional sint32 busyDegree = 3;
bool SulokiServiceStateUrcMsgBody::has_busydegree() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SulokiServiceStateUrcMsgBody::set_has_busydegree() {
  _has_bits_[0] |= 0x00000008u;
}
void SulokiServiceStateUrcMsgBody::clear_has_busydegree() {
  _has_bits_[0] &= ~0x00000008u;
}
void SulokiServiceStateUrcMsgBody::clear_busydegree() {
  busydegree_ = 0;
  clear_has_busydegree();
}
::google::protobuf::int32 SulokiServiceStateUrcMsgBody::busydegree() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiServiceStateUrcMsgBody.busyDegree)
  return busydegree_;
}
void SulokiServiceStateUrcMsgBody::set_busydegree(::google::protobuf::int32 value) {
  set_has_busydegree();
  busydegree_ = value;
  // @@protoc_insertion_point(field_set:suloki.SulokiServiceStateUrcMsgBody.busyDegree)
}

// optional string urName = 4;
bool SulokiServiceStateUrcMsgBody::has_urname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SulokiServiceStateUrcMsgBody::set_has_urname() {
  _has_bits_[0] |= 0x00000002u;
}
void SulokiServiceStateUrcMsgBody::clear_has_urname() {
  _has_bits_[0] &= ~0x00000002u;
}
void SulokiServiceStateUrcMsgBody::clear_urname() {
  urname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_urname();
}
const ::std::string& SulokiServiceStateUrcMsgBody::urname() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiServiceStateUrcMsgBody.urName)
  return urname_.GetNoArena();
}
void SulokiServiceStateUrcMsgBody::set_urname(const ::std::string& value) {
  set_has_urname();
  urname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suloki.SulokiServiceStateUrcMsgBody.urName)
}
#if LANG_CXX11
void SulokiServiceStateUrcMsgBody::set_urname(::std::string&& value) {
  set_has_urname();
  urname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:suloki.SulokiServiceStateUrcMsgBody.urName)
}
#endif
void SulokiServiceStateUrcMsgBody::set_urname(const char* value) {
  set_has_urname();
  urname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suloki.SulokiServiceStateUrcMsgBody.urName)
}
void SulokiServiceStateUrcMsgBody::set_urname(const char* value, size_t size) {
  set_has_urname();
  urname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiServiceStateUrcMsgBody.urName)
}
::std::string* SulokiServiceStateUrcMsgBody::mutable_urname() {
  set_has_urname();
  // @@protoc_insertion_point(field_mutable:suloki.SulokiServiceStateUrcMsgBody.urName)
  return urname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SulokiServiceStateUrcMsgBody::release_urname() {
  // @@protoc_insertion_point(field_release:suloki.SulokiServiceStateUrcMsgBody.urName)
  clear_has_urname();
  return urname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SulokiServiceStateUrcMsgBody::set_allocated_urname(::std::string* urname) {
  if (urname != NULL) {
    set_has_urname();
  } else {
    clear_has_urname();
  }
  urname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), urname);
  // @@protoc_insertion_point(field_set_allocated:suloki.SulokiServiceStateUrcMsgBody.urName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SulokiGroupStateUrcMsgBody::kStateResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SulokiGroupStateUrcMsgBody::SulokiGroupStateUrcMsgBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_suloki_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:suloki.SulokiGroupStateUrcMsgBody)
}
SulokiGroupStateUrcMsgBody::SulokiGroupStateUrcMsgBody(const SulokiGroupStateUrcMsgBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stateres_(from.stateres_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:suloki.SulokiGroupStateUrcMsgBody)
}

void SulokiGroupStateUrcMsgBody::SharedCtor() {
  _cached_size_ = 0;
}

SulokiGroupStateUrcMsgBody::~SulokiGroupStateUrcMsgBody() {
  // @@protoc_insertion_point(destructor:suloki.SulokiGroupStateUrcMsgBody)
  SharedDtor();
}

void SulokiGroupStateUrcMsgBody::SharedDtor() {
}

void SulokiGroupStateUrcMsgBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SulokiGroupStateUrcMsgBody::descriptor() {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[9].descriptor;
}

const SulokiGroupStateUrcMsgBody& SulokiGroupStateUrcMsgBody::default_instance() {
  protobuf_suloki_2eproto::InitDefaults();
  return *internal_default_instance();
}

SulokiGroupStateUrcMsgBody* SulokiGroupStateUrcMsgBody::New(::google::protobuf::Arena* arena) const {
  SulokiGroupStateUrcMsgBody* n = new SulokiGroupStateUrcMsgBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SulokiGroupStateUrcMsgBody::Clear() {
// @@protoc_insertion_point(message_clear_start:suloki.SulokiGroupStateUrcMsgBody)
  stateres_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SulokiGroupStateUrcMsgBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suloki.SulokiGroupStateUrcMsgBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .suloki.SulokiServiceStateUrcMsgBody stateRes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_stateres()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suloki.SulokiGroupStateUrcMsgBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suloki.SulokiGroupStateUrcMsgBody)
  return false;
#undef DO_
}

void SulokiGroupStateUrcMsgBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suloki.SulokiGroupStateUrcMsgBody)
  // repeated .suloki.SulokiServiceStateUrcMsgBody stateRes = 1;
  for (unsigned int i = 0, n = this->stateres_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->stateres(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:suloki.SulokiGroupStateUrcMsgBody)
}

::google::protobuf::uint8* SulokiGroupStateUrcMsgBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:suloki.SulokiGroupStateUrcMsgBody)
  // repeated .suloki.SulokiServiceStateUrcMsgBody stateRes = 1;
  for (unsigned int i = 0, n = this->stateres_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->stateres(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:suloki.SulokiGroupStateUrcMsgBody)
  return target;
}

size_t SulokiGroupStateUrcMsgBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:suloki.SulokiGroupStateUrcMsgBody)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .suloki.SulokiServiceStateUrcMsgBody stateRes = 1;
  {
    unsigned int count = this->stateres_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stateres(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SulokiGroupStateUrcMsgBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suloki.SulokiGroupStateUrcMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  const SulokiGroupStateUrcMsgBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SulokiGroupStateUrcMsgBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suloki.SulokiGroupStateUrcMsgBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suloki.SulokiGroupStateUrcMsgBody)
    MergeFrom(*source);
  }
}

void SulokiGroupStateUrcMsgBody::MergeFrom(const SulokiGroupStateUrcMsgBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suloki.SulokiGroupStateUrcMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stateres_.MergeFrom(from.stateres_);
}

void SulokiGroupStateUrcMsgBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suloki.SulokiGroupStateUrcMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SulokiGroupStateUrcMsgBody::CopyFrom(const SulokiGroupStateUrcMsgBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suloki.SulokiGroupStateUrcMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SulokiGroupStateUrcMsgBody::IsInitialized() const {
  return true;
}

void SulokiGroupStateUrcMsgBody::Swap(SulokiGroupStateUrcMsgBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SulokiGroupStateUrcMsgBody::InternalSwap(SulokiGroupStateUrcMsgBody* other) {
  stateres_.UnsafeArenaSwap(&other->stateres_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SulokiGroupStateUrcMsgBody::GetMetadata() const {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SulokiGroupStateUrcMsgBody

// repeated .suloki.SulokiServiceStateUrcMsgBody stateRes = 1;
int SulokiGroupStateUrcMsgBody::stateres_size() const {
  return stateres_.size();
}
void SulokiGroupStateUrcMsgBody::clear_stateres() {
  stateres_.Clear();
}
const ::suloki::SulokiServiceStateUrcMsgBody& SulokiGroupStateUrcMsgBody::stateres(int index) const {
  // @@protoc_insertion_point(field_get:suloki.SulokiGroupStateUrcMsgBody.stateRes)
  return stateres_.Get(index);
}
::suloki::SulokiServiceStateUrcMsgBody* SulokiGroupStateUrcMsgBody::mutable_stateres(int index) {
  // @@protoc_insertion_point(field_mutable:suloki.SulokiGroupStateUrcMsgBody.stateRes)
  return stateres_.Mutable(index);
}
::suloki::SulokiServiceStateUrcMsgBody* SulokiGroupStateUrcMsgBody::add_stateres() {
  // @@protoc_insertion_point(field_add:suloki.SulokiGroupStateUrcMsgBody.stateRes)
  return stateres_.Add();
}
::google::protobuf::RepeatedPtrField< ::suloki::SulokiServiceStateUrcMsgBody >*
SulokiGroupStateUrcMsgBody::mutable_stateres() {
  // @@protoc_insertion_point(field_mutable_list:suloki.SulokiGroupStateUrcMsgBody.stateRes)
  return &stateres_;
}
const ::google::protobuf::RepeatedPtrField< ::suloki::SulokiServiceStateUrcMsgBody >&
SulokiGroupStateUrcMsgBody::stateres() const {
  // @@protoc_insertion_point(field_list:suloki.SulokiGroupStateUrcMsgBody.stateRes)
  return stateres_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SulokiSqlReqUrcMsgBody::kUrcKeyFieldNumber;
const int SulokiSqlReqUrcMsgBody::kUrcSqlFieldNumber;
const int SulokiSqlReqUrcMsgBody::kUrcDbNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SulokiSqlReqUrcMsgBody::SulokiSqlReqUrcMsgBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_suloki_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:suloki.SulokiSqlReqUrcMsgBody)
}
SulokiSqlReqUrcMsgBody::SulokiSqlReqUrcMsgBody(const SulokiSqlReqUrcMsgBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  urckey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_urckey()) {
    urckey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.urckey_);
  }
  urcsql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_urcsql()) {
    urcsql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.urcsql_);
  }
  urcdbname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_urcdbname()) {
    urcdbname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.urcdbname_);
  }
  // @@protoc_insertion_point(copy_constructor:suloki.SulokiSqlReqUrcMsgBody)
}

void SulokiSqlReqUrcMsgBody::SharedCtor() {
  _cached_size_ = 0;
  urckey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  urcsql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  urcdbname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SulokiSqlReqUrcMsgBody::~SulokiSqlReqUrcMsgBody() {
  // @@protoc_insertion_point(destructor:suloki.SulokiSqlReqUrcMsgBody)
  SharedDtor();
}

void SulokiSqlReqUrcMsgBody::SharedDtor() {
  urckey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  urcsql_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  urcdbname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SulokiSqlReqUrcMsgBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SulokiSqlReqUrcMsgBody::descriptor() {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[10].descriptor;
}

const SulokiSqlReqUrcMsgBody& SulokiSqlReqUrcMsgBody::default_instance() {
  protobuf_suloki_2eproto::InitDefaults();
  return *internal_default_instance();
}

SulokiSqlReqUrcMsgBody* SulokiSqlReqUrcMsgBody::New(::google::protobuf::Arena* arena) const {
  SulokiSqlReqUrcMsgBody* n = new SulokiSqlReqUrcMsgBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SulokiSqlReqUrcMsgBody::Clear() {
// @@protoc_insertion_point(message_clear_start:suloki.SulokiSqlReqUrcMsgBody)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_urckey()) {
      GOOGLE_DCHECK(!urckey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*urckey_.UnsafeRawStringPointer())->clear();
    }
    if (has_urcsql()) {
      GOOGLE_DCHECK(!urcsql_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*urcsql_.UnsafeRawStringPointer())->clear();
    }
    if (has_urcdbname()) {
      GOOGLE_DCHECK(!urcdbname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*urcdbname_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SulokiSqlReqUrcMsgBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suloki.SulokiSqlReqUrcMsgBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string urcKey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_urckey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->urckey().data(), this->urckey().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suloki.SulokiSqlReqUrcMsgBody.urcKey");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string urcSql = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_urcsql()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->urcsql().data(), this->urcsql().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suloki.SulokiSqlReqUrcMsgBody.urcSql");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string urcDbName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_urcdbname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->urcdbname().data(), this->urcdbname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suloki.SulokiSqlReqUrcMsgBody.urcDbName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suloki.SulokiSqlReqUrcMsgBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suloki.SulokiSqlReqUrcMsgBody)
  return false;
#undef DO_
}

void SulokiSqlReqUrcMsgBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suloki.SulokiSqlReqUrcMsgBody)
  // required string urcKey = 1;
  if (has_urckey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->urckey().data(), this->urckey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiSqlReqUrcMsgBody.urcKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->urckey(), output);
  }

  // required string urcSql = 2;
  if (has_urcsql()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->urcsql().data(), this->urcsql().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiSqlReqUrcMsgBody.urcSql");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->urcsql(), output);
  }

  // optional string urcDbName = 3;
  if (has_urcdbname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->urcdbname().data(), this->urcdbname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiSqlReqUrcMsgBody.urcDbName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->urcdbname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:suloki.SulokiSqlReqUrcMsgBody)
}

::google::protobuf::uint8* SulokiSqlReqUrcMsgBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:suloki.SulokiSqlReqUrcMsgBody)
  // required string urcKey = 1;
  if (has_urckey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->urckey().data(), this->urckey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiSqlReqUrcMsgBody.urcKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->urckey(), target);
  }

  // required string urcSql = 2;
  if (has_urcsql()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->urcsql().data(), this->urcsql().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiSqlReqUrcMsgBody.urcSql");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->urcsql(), target);
  }

  // optional string urcDbName = 3;
  if (has_urcdbname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->urcdbname().data(), this->urcdbname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiSqlReqUrcMsgBody.urcDbName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->urcdbname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:suloki.SulokiSqlReqUrcMsgBody)
  return target;
}

size_t SulokiSqlReqUrcMsgBody::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:suloki.SulokiSqlReqUrcMsgBody)
  size_t total_size = 0;

  if (has_urckey()) {
    // required string urcKey = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->urckey());
  }

  if (has_urcsql()) {
    // required string urcSql = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->urcsql());
  }

  return total_size;
}
size_t SulokiSqlReqUrcMsgBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:suloki.SulokiSqlReqUrcMsgBody)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string urcKey = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->urckey());

    // required string urcSql = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->urcsql());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string urcDbName = 3;
  if (has_urcdbname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->urcdbname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SulokiSqlReqUrcMsgBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suloki.SulokiSqlReqUrcMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  const SulokiSqlReqUrcMsgBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SulokiSqlReqUrcMsgBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suloki.SulokiSqlReqUrcMsgBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suloki.SulokiSqlReqUrcMsgBody)
    MergeFrom(*source);
  }
}

void SulokiSqlReqUrcMsgBody::MergeFrom(const SulokiSqlReqUrcMsgBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suloki.SulokiSqlReqUrcMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_urckey()) {
      set_has_urckey();
      urckey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.urckey_);
    }
    if (from.has_urcsql()) {
      set_has_urcsql();
      urcsql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.urcsql_);
    }
    if (from.has_urcdbname()) {
      set_has_urcdbname();
      urcdbname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.urcdbname_);
    }
  }
}

void SulokiSqlReqUrcMsgBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suloki.SulokiSqlReqUrcMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SulokiSqlReqUrcMsgBody::CopyFrom(const SulokiSqlReqUrcMsgBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suloki.SulokiSqlReqUrcMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SulokiSqlReqUrcMsgBody::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void SulokiSqlReqUrcMsgBody::Swap(SulokiSqlReqUrcMsgBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SulokiSqlReqUrcMsgBody::InternalSwap(SulokiSqlReqUrcMsgBody* other) {
  urckey_.Swap(&other->urckey_);
  urcsql_.Swap(&other->urcsql_);
  urcdbname_.Swap(&other->urcdbname_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SulokiSqlReqUrcMsgBody::GetMetadata() const {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SulokiSqlReqUrcMsgBody

// required string urcKey = 1;
bool SulokiSqlReqUrcMsgBody::has_urckey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SulokiSqlReqUrcMsgBody::set_has_urckey() {
  _has_bits_[0] |= 0x00000001u;
}
void SulokiSqlReqUrcMsgBody::clear_has_urckey() {
  _has_bits_[0] &= ~0x00000001u;
}
void SulokiSqlReqUrcMsgBody::clear_urckey() {
  urckey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_urckey();
}
const ::std::string& SulokiSqlReqUrcMsgBody::urckey() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiSqlReqUrcMsgBody.urcKey)
  return urckey_.GetNoArena();
}
void SulokiSqlReqUrcMsgBody::set_urckey(const ::std::string& value) {
  set_has_urckey();
  urckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suloki.SulokiSqlReqUrcMsgBody.urcKey)
}
#if LANG_CXX11
void SulokiSqlReqUrcMsgBody::set_urckey(::std::string&& value) {
  set_has_urckey();
  urckey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:suloki.SulokiSqlReqUrcMsgBody.urcKey)
}
#endif
void SulokiSqlReqUrcMsgBody::set_urckey(const char* value) {
  set_has_urckey();
  urckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suloki.SulokiSqlReqUrcMsgBody.urcKey)
}
void SulokiSqlReqUrcMsgBody::set_urckey(const char* value, size_t size) {
  set_has_urckey();
  urckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiSqlReqUrcMsgBody.urcKey)
}
::std::string* SulokiSqlReqUrcMsgBody::mutable_urckey() {
  set_has_urckey();
  // @@protoc_insertion_point(field_mutable:suloki.SulokiSqlReqUrcMsgBody.urcKey)
  return urckey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SulokiSqlReqUrcMsgBody::release_urckey() {
  // @@protoc_insertion_point(field_release:suloki.SulokiSqlReqUrcMsgBody.urcKey)
  clear_has_urckey();
  return urckey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SulokiSqlReqUrcMsgBody::set_allocated_urckey(::std::string* urckey) {
  if (urckey != NULL) {
    set_has_urckey();
  } else {
    clear_has_urckey();
  }
  urckey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), urckey);
  // @@protoc_insertion_point(field_set_allocated:suloki.SulokiSqlReqUrcMsgBody.urcKey)
}

// required string urcSql = 2;
bool SulokiSqlReqUrcMsgBody::has_urcsql() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SulokiSqlReqUrcMsgBody::set_has_urcsql() {
  _has_bits_[0] |= 0x00000002u;
}
void SulokiSqlReqUrcMsgBody::clear_has_urcsql() {
  _has_bits_[0] &= ~0x00000002u;
}
void SulokiSqlReqUrcMsgBody::clear_urcsql() {
  urcsql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_urcsql();
}
const ::std::string& SulokiSqlReqUrcMsgBody::urcsql() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiSqlReqUrcMsgBody.urcSql)
  return urcsql_.GetNoArena();
}
void SulokiSqlReqUrcMsgBody::set_urcsql(const ::std::string& value) {
  set_has_urcsql();
  urcsql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suloki.SulokiSqlReqUrcMsgBody.urcSql)
}
#if LANG_CXX11
void SulokiSqlReqUrcMsgBody::set_urcsql(::std::string&& value) {
  set_has_urcsql();
  urcsql_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:suloki.SulokiSqlReqUrcMsgBody.urcSql)
}
#endif
void SulokiSqlReqUrcMsgBody::set_urcsql(const char* value) {
  set_has_urcsql();
  urcsql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suloki.SulokiSqlReqUrcMsgBody.urcSql)
}
void SulokiSqlReqUrcMsgBody::set_urcsql(const char* value, size_t size) {
  set_has_urcsql();
  urcsql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiSqlReqUrcMsgBody.urcSql)
}
::std::string* SulokiSqlReqUrcMsgBody::mutable_urcsql() {
  set_has_urcsql();
  // @@protoc_insertion_point(field_mutable:suloki.SulokiSqlReqUrcMsgBody.urcSql)
  return urcsql_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SulokiSqlReqUrcMsgBody::release_urcsql() {
  // @@protoc_insertion_point(field_release:suloki.SulokiSqlReqUrcMsgBody.urcSql)
  clear_has_urcsql();
  return urcsql_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SulokiSqlReqUrcMsgBody::set_allocated_urcsql(::std::string* urcsql) {
  if (urcsql != NULL) {
    set_has_urcsql();
  } else {
    clear_has_urcsql();
  }
  urcsql_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), urcsql);
  // @@protoc_insertion_point(field_set_allocated:suloki.SulokiSqlReqUrcMsgBody.urcSql)
}

// optional string urcDbName = 3;
bool SulokiSqlReqUrcMsgBody::has_urcdbname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SulokiSqlReqUrcMsgBody::set_has_urcdbname() {
  _has_bits_[0] |= 0x00000004u;
}
void SulokiSqlReqUrcMsgBody::clear_has_urcdbname() {
  _has_bits_[0] &= ~0x00000004u;
}
void SulokiSqlReqUrcMsgBody::clear_urcdbname() {
  urcdbname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_urcdbname();
}
const ::std::string& SulokiSqlReqUrcMsgBody::urcdbname() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiSqlReqUrcMsgBody.urcDbName)
  return urcdbname_.GetNoArena();
}
void SulokiSqlReqUrcMsgBody::set_urcdbname(const ::std::string& value) {
  set_has_urcdbname();
  urcdbname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suloki.SulokiSqlReqUrcMsgBody.urcDbName)
}
#if LANG_CXX11
void SulokiSqlReqUrcMsgBody::set_urcdbname(::std::string&& value) {
  set_has_urcdbname();
  urcdbname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:suloki.SulokiSqlReqUrcMsgBody.urcDbName)
}
#endif
void SulokiSqlReqUrcMsgBody::set_urcdbname(const char* value) {
  set_has_urcdbname();
  urcdbname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suloki.SulokiSqlReqUrcMsgBody.urcDbName)
}
void SulokiSqlReqUrcMsgBody::set_urcdbname(const char* value, size_t size) {
  set_has_urcdbname();
  urcdbname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiSqlReqUrcMsgBody.urcDbName)
}
::std::string* SulokiSqlReqUrcMsgBody::mutable_urcdbname() {
  set_has_urcdbname();
  // @@protoc_insertion_point(field_mutable:suloki.SulokiSqlReqUrcMsgBody.urcDbName)
  return urcdbname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SulokiSqlReqUrcMsgBody::release_urcdbname() {
  // @@protoc_insertion_point(field_release:suloki.SulokiSqlReqUrcMsgBody.urcDbName)
  clear_has_urcdbname();
  return urcdbname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SulokiSqlReqUrcMsgBody::set_allocated_urcdbname(::std::string* urcdbname) {
  if (urcdbname != NULL) {
    set_has_urcdbname();
  } else {
    clear_has_urcdbname();
  }
  urcdbname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), urcdbname);
  // @@protoc_insertion_point(field_set_allocated:suloki.SulokiSqlReqUrcMsgBody.urcDbName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SulokiSqlResItemUrcMsgBody::kSqlResItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SulokiSqlResItemUrcMsgBody::SulokiSqlResItemUrcMsgBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_suloki_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:suloki.SulokiSqlResItemUrcMsgBody)
}
SulokiSqlResItemUrcMsgBody::SulokiSqlResItemUrcMsgBody(const SulokiSqlResItemUrcMsgBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      sqlresitem_(from.sqlresitem_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:suloki.SulokiSqlResItemUrcMsgBody)
}

void SulokiSqlResItemUrcMsgBody::SharedCtor() {
  _cached_size_ = 0;
}

SulokiSqlResItemUrcMsgBody::~SulokiSqlResItemUrcMsgBody() {
  // @@protoc_insertion_point(destructor:suloki.SulokiSqlResItemUrcMsgBody)
  SharedDtor();
}

void SulokiSqlResItemUrcMsgBody::SharedDtor() {
}

void SulokiSqlResItemUrcMsgBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SulokiSqlResItemUrcMsgBody::descriptor() {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[11].descriptor;
}

const SulokiSqlResItemUrcMsgBody& SulokiSqlResItemUrcMsgBody::default_instance() {
  protobuf_suloki_2eproto::InitDefaults();
  return *internal_default_instance();
}

SulokiSqlResItemUrcMsgBody* SulokiSqlResItemUrcMsgBody::New(::google::protobuf::Arena* arena) const {
  SulokiSqlResItemUrcMsgBody* n = new SulokiSqlResItemUrcMsgBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SulokiSqlResItemUrcMsgBody::Clear() {
// @@protoc_insertion_point(message_clear_start:suloki.SulokiSqlResItemUrcMsgBody)
  sqlresitem_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SulokiSqlResItemUrcMsgBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suloki.SulokiSqlResItemUrcMsgBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes sqlResItem = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_sqlresitem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suloki.SulokiSqlResItemUrcMsgBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suloki.SulokiSqlResItemUrcMsgBody)
  return false;
#undef DO_
}

void SulokiSqlResItemUrcMsgBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suloki.SulokiSqlResItemUrcMsgBody)
  // repeated bytes sqlResItem = 1;
  for (int i = 0, n = this->sqlresitem_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->sqlresitem(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:suloki.SulokiSqlResItemUrcMsgBody)
}

::google::protobuf::uint8* SulokiSqlResItemUrcMsgBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:suloki.SulokiSqlResItemUrcMsgBody)
  // repeated bytes sqlResItem = 1;
  for (int i = 0, n = this->sqlresitem_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->sqlresitem(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:suloki.SulokiSqlResItemUrcMsgBody)
  return target;
}

size_t SulokiSqlResItemUrcMsgBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:suloki.SulokiSqlResItemUrcMsgBody)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated bytes sqlResItem = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->sqlresitem_size());
  for (int i = 0, n = this->sqlresitem_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->sqlresitem(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SulokiSqlResItemUrcMsgBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suloki.SulokiSqlResItemUrcMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  const SulokiSqlResItemUrcMsgBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SulokiSqlResItemUrcMsgBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suloki.SulokiSqlResItemUrcMsgBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suloki.SulokiSqlResItemUrcMsgBody)
    MergeFrom(*source);
  }
}

void SulokiSqlResItemUrcMsgBody::MergeFrom(const SulokiSqlResItemUrcMsgBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suloki.SulokiSqlResItemUrcMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sqlresitem_.MergeFrom(from.sqlresitem_);
}

void SulokiSqlResItemUrcMsgBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suloki.SulokiSqlResItemUrcMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SulokiSqlResItemUrcMsgBody::CopyFrom(const SulokiSqlResItemUrcMsgBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suloki.SulokiSqlResItemUrcMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SulokiSqlResItemUrcMsgBody::IsInitialized() const {
  return true;
}

void SulokiSqlResItemUrcMsgBody::Swap(SulokiSqlResItemUrcMsgBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SulokiSqlResItemUrcMsgBody::InternalSwap(SulokiSqlResItemUrcMsgBody* other) {
  sqlresitem_.UnsafeArenaSwap(&other->sqlresitem_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SulokiSqlResItemUrcMsgBody::GetMetadata() const {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SulokiSqlResItemUrcMsgBody

// repeated bytes sqlResItem = 1;
int SulokiSqlResItemUrcMsgBody::sqlresitem_size() const {
  return sqlresitem_.size();
}
void SulokiSqlResItemUrcMsgBody::clear_sqlresitem() {
  sqlresitem_.Clear();
}
const ::std::string& SulokiSqlResItemUrcMsgBody::sqlresitem(int index) const {
  // @@protoc_insertion_point(field_get:suloki.SulokiSqlResItemUrcMsgBody.sqlResItem)
  return sqlresitem_.Get(index);
}
::std::string* SulokiSqlResItemUrcMsgBody::mutable_sqlresitem(int index) {
  // @@protoc_insertion_point(field_mutable:suloki.SulokiSqlResItemUrcMsgBody.sqlResItem)
  return sqlresitem_.Mutable(index);
}
void SulokiSqlResItemUrcMsgBody::set_sqlresitem(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:suloki.SulokiSqlResItemUrcMsgBody.sqlResItem)
  sqlresitem_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void SulokiSqlResItemUrcMsgBody::set_sqlresitem(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:suloki.SulokiSqlResItemUrcMsgBody.sqlResItem)
  sqlresitem_.Mutable(index)->assign(std::move(value));
}
#endif
void SulokiSqlResItemUrcMsgBody::set_sqlresitem(int index, const char* value) {
  sqlresitem_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:suloki.SulokiSqlResItemUrcMsgBody.sqlResItem)
}
void SulokiSqlResItemUrcMsgBody::set_sqlresitem(int index, const void* value, size_t size) {
  sqlresitem_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiSqlResItemUrcMsgBody.sqlResItem)
}
::std::string* SulokiSqlResItemUrcMsgBody::add_sqlresitem() {
  // @@protoc_insertion_point(field_add_mutable:suloki.SulokiSqlResItemUrcMsgBody.sqlResItem)
  return sqlresitem_.Add();
}
void SulokiSqlResItemUrcMsgBody::add_sqlresitem(const ::std::string& value) {
  sqlresitem_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:suloki.SulokiSqlResItemUrcMsgBody.sqlResItem)
}
#if LANG_CXX11
void SulokiSqlResItemUrcMsgBody::add_sqlresitem(::std::string&& value) {
  sqlresitem_.Add()->assign(std::move(value));
  // @@protoc_insertion_point(field_add:suloki.SulokiSqlResItemUrcMsgBody.sqlResItem)
}
#endif
void SulokiSqlResItemUrcMsgBody::add_sqlresitem(const char* value) {
  sqlresitem_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:suloki.SulokiSqlResItemUrcMsgBody.sqlResItem)
}
void SulokiSqlResItemUrcMsgBody::add_sqlresitem(const void* value, size_t size) {
  sqlresitem_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:suloki.SulokiSqlResItemUrcMsgBody.sqlResItem)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
SulokiSqlResItemUrcMsgBody::sqlresitem() const {
  // @@protoc_insertion_point(field_list:suloki.SulokiSqlResItemUrcMsgBody.sqlResItem)
  return sqlresitem_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
SulokiSqlResItemUrcMsgBody::mutable_sqlresitem() {
  // @@protoc_insertion_point(field_mutable_list:suloki.SulokiSqlResItemUrcMsgBody.sqlResItem)
  return &sqlresitem_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SulokiSqlResUrcMsgBody::kSqlResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SulokiSqlResUrcMsgBody::SulokiSqlResUrcMsgBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_suloki_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:suloki.SulokiSqlResUrcMsgBody)
}
SulokiSqlResUrcMsgBody::SulokiSqlResUrcMsgBody(const SulokiSqlResUrcMsgBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      sqlres_(from.sqlres_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:suloki.SulokiSqlResUrcMsgBody)
}

void SulokiSqlResUrcMsgBody::SharedCtor() {
  _cached_size_ = 0;
}

SulokiSqlResUrcMsgBody::~SulokiSqlResUrcMsgBody() {
  // @@protoc_insertion_point(destructor:suloki.SulokiSqlResUrcMsgBody)
  SharedDtor();
}

void SulokiSqlResUrcMsgBody::SharedDtor() {
}

void SulokiSqlResUrcMsgBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SulokiSqlResUrcMsgBody::descriptor() {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[12].descriptor;
}

const SulokiSqlResUrcMsgBody& SulokiSqlResUrcMsgBody::default_instance() {
  protobuf_suloki_2eproto::InitDefaults();
  return *internal_default_instance();
}

SulokiSqlResUrcMsgBody* SulokiSqlResUrcMsgBody::New(::google::protobuf::Arena* arena) const {
  SulokiSqlResUrcMsgBody* n = new SulokiSqlResUrcMsgBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SulokiSqlResUrcMsgBody::Clear() {
// @@protoc_insertion_point(message_clear_start:suloki.SulokiSqlResUrcMsgBody)
  sqlres_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SulokiSqlResUrcMsgBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suloki.SulokiSqlResUrcMsgBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .suloki.SulokiSqlResItemUrcMsgBody sqlRes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_sqlres()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suloki.SulokiSqlResUrcMsgBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suloki.SulokiSqlResUrcMsgBody)
  return false;
#undef DO_
}

void SulokiSqlResUrcMsgBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suloki.SulokiSqlResUrcMsgBody)
  // repeated .suloki.SulokiSqlResItemUrcMsgBody sqlRes = 1;
  for (unsigned int i = 0, n = this->sqlres_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sqlres(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:suloki.SulokiSqlResUrcMsgBody)
}

::google::protobuf::uint8* SulokiSqlResUrcMsgBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:suloki.SulokiSqlResUrcMsgBody)
  // repeated .suloki.SulokiSqlResItemUrcMsgBody sqlRes = 1;
  for (unsigned int i = 0, n = this->sqlres_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->sqlres(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:suloki.SulokiSqlResUrcMsgBody)
  return target;
}

size_t SulokiSqlResUrcMsgBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:suloki.SulokiSqlResUrcMsgBody)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .suloki.SulokiSqlResItemUrcMsgBody sqlRes = 1;
  {
    unsigned int count = this->sqlres_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sqlres(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SulokiSqlResUrcMsgBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suloki.SulokiSqlResUrcMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  const SulokiSqlResUrcMsgBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SulokiSqlResUrcMsgBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suloki.SulokiSqlResUrcMsgBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suloki.SulokiSqlResUrcMsgBody)
    MergeFrom(*source);
  }
}

void SulokiSqlResUrcMsgBody::MergeFrom(const SulokiSqlResUrcMsgBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suloki.SulokiSqlResUrcMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sqlres_.MergeFrom(from.sqlres_);
}

void SulokiSqlResUrcMsgBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suloki.SulokiSqlResUrcMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SulokiSqlResUrcMsgBody::CopyFrom(const SulokiSqlResUrcMsgBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suloki.SulokiSqlResUrcMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SulokiSqlResUrcMsgBody::IsInitialized() const {
  return true;
}

void SulokiSqlResUrcMsgBody::Swap(SulokiSqlResUrcMsgBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SulokiSqlResUrcMsgBody::InternalSwap(SulokiSqlResUrcMsgBody* other) {
  sqlres_.UnsafeArenaSwap(&other->sqlres_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SulokiSqlResUrcMsgBody::GetMetadata() const {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SulokiSqlResUrcMsgBody

// repeated .suloki.SulokiSqlResItemUrcMsgBody sqlRes = 1;
int SulokiSqlResUrcMsgBody::sqlres_size() const {
  return sqlres_.size();
}
void SulokiSqlResUrcMsgBody::clear_sqlres() {
  sqlres_.Clear();
}
const ::suloki::SulokiSqlResItemUrcMsgBody& SulokiSqlResUrcMsgBody::sqlres(int index) const {
  // @@protoc_insertion_point(field_get:suloki.SulokiSqlResUrcMsgBody.sqlRes)
  return sqlres_.Get(index);
}
::suloki::SulokiSqlResItemUrcMsgBody* SulokiSqlResUrcMsgBody::mutable_sqlres(int index) {
  // @@protoc_insertion_point(field_mutable:suloki.SulokiSqlResUrcMsgBody.sqlRes)
  return sqlres_.Mutable(index);
}
::suloki::SulokiSqlResItemUrcMsgBody* SulokiSqlResUrcMsgBody::add_sqlres() {
  // @@protoc_insertion_point(field_add:suloki.SulokiSqlResUrcMsgBody.sqlRes)
  return sqlres_.Add();
}
::google::protobuf::RepeatedPtrField< ::suloki::SulokiSqlResItemUrcMsgBody >*
SulokiSqlResUrcMsgBody::mutable_sqlres() {
  // @@protoc_insertion_point(field_mutable_list:suloki.SulokiSqlResUrcMsgBody.sqlRes)
  return &sqlres_;
}
const ::google::protobuf::RepeatedPtrField< ::suloki::SulokiSqlResItemUrcMsgBody >&
SulokiSqlResUrcMsgBody::sqlres() const {
  // @@protoc_insertion_point(field_list:suloki.SulokiSqlResUrcMsgBody.sqlRes)
  return sqlres_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SulokiRegRecvEventBody::kPatternKeyFieldNumber;
const int SulokiRegRecvEventBody::kBusinessIdFieldNumber;
const int SulokiRegRecvEventBody::kMessageIdFieldNumber;
const int SulokiRegRecvEventBody::kSequenceNumberFieldNumber;
const int SulokiRegRecvEventBody::kModeFieldNumber;
const int SulokiRegRecvEventBody::kTimeoutFieldNumber;
const int SulokiRegRecvEventBody::kRightFieldNumber;
const int SulokiRegRecvEventBody::kPolicyFieldNumber;
const int SulokiRegRecvEventBody::kCallbackFieldNumber;
const int SulokiRegRecvEventBody::kUserdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SulokiRegRecvEventBody::SulokiRegRecvEventBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_suloki_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:suloki.SulokiRegRecvEventBody)
}
SulokiRegRecvEventBody::SulokiRegRecvEventBody(const SulokiRegRecvEventBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  patternkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_patternkey()) {
    patternkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.patternkey_);
  }
  callback_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_callback()) {
    callback_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callback_);
  }
  ::memcpy(&businessid_, &from.businessid_,
    reinterpret_cast<char*>(&userdata_) -
    reinterpret_cast<char*>(&businessid_) + sizeof(userdata_));
  // @@protoc_insertion_point(copy_constructor:suloki.SulokiRegRecvEventBody)
}

void SulokiRegRecvEventBody::SharedCtor() {
  _cached_size_ = 0;
  patternkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callback_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&businessid_, 0, reinterpret_cast<char*>(&userdata_) -
    reinterpret_cast<char*>(&businessid_) + sizeof(userdata_));
}

SulokiRegRecvEventBody::~SulokiRegRecvEventBody() {
  // @@protoc_insertion_point(destructor:suloki.SulokiRegRecvEventBody)
  SharedDtor();
}

void SulokiRegRecvEventBody::SharedDtor() {
  patternkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callback_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SulokiRegRecvEventBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SulokiRegRecvEventBody::descriptor() {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[13].descriptor;
}

const SulokiRegRecvEventBody& SulokiRegRecvEventBody::default_instance() {
  protobuf_suloki_2eproto::InitDefaults();
  return *internal_default_instance();
}

SulokiRegRecvEventBody* SulokiRegRecvEventBody::New(::google::protobuf::Arena* arena) const {
  SulokiRegRecvEventBody* n = new SulokiRegRecvEventBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SulokiRegRecvEventBody::Clear() {
// @@protoc_insertion_point(message_clear_start:suloki.SulokiRegRecvEventBody)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_patternkey()) {
      GOOGLE_DCHECK(!patternkey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*patternkey_.UnsafeRawStringPointer())->clear();
    }
    if (has_callback()) {
      GOOGLE_DCHECK(!callback_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*callback_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 252u) {
    ::memset(&businessid_, 0, reinterpret_cast<char*>(&right_) -
      reinterpret_cast<char*>(&businessid_) + sizeof(right_));
  }
  if (_has_bits_[8 / 32] & 768u) {
    ::memset(&policy_, 0, reinterpret_cast<char*>(&userdata_) -
      reinterpret_cast<char*>(&policy_) + sizeof(userdata_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SulokiRegRecvEventBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suloki.SulokiRegRecvEventBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string patternKey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_patternkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->patternkey().data(), this->patternkey().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suloki.SulokiRegRecvEventBody.patternKey");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 businessId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_businessid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &businessid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 messageId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_messageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &messageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 sequenceNumber = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_sequencenumber();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &sequencenumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .suloki.EventMode mode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::suloki::EventMode_IsValid(value)) {
            set_mode(static_cast< ::suloki::EventMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 timeout = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_timeout();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .suloki.EventRight right = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::suloki::EventRight_IsValid(value)) {
            set_right(static_cast< ::suloki::EventRight >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .suloki.EventPolicy policy = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::suloki::EventPolicy_IsValid(value)) {
            set_policy(static_cast< ::suloki::EventPolicy >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string callback = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callback()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->callback().data(), this->callback().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suloki.SulokiRegRecvEventBody.callback");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 userdata = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_userdata();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userdata_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suloki.SulokiRegRecvEventBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suloki.SulokiRegRecvEventBody)
  return false;
#undef DO_
}

void SulokiRegRecvEventBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suloki.SulokiRegRecvEventBody)
  // required string patternKey = 1;
  if (has_patternkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->patternkey().data(), this->patternkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiRegRecvEventBody.patternKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->patternkey(), output);
  }

  // required sint32 businessId = 2;
  if (has_businessid()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->businessid(), output);
  }

  // required sint32 messageId = 3;
  if (has_messageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->messageid(), output);
  }

  // optional sint64 sequenceNumber = 4;
  if (has_sequencenumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(4, this->sequencenumber(), output);
  }

  // required .suloki.EventMode mode = 5;
  if (has_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->mode(), output);
  }

  // optional sint32 timeout = 6;
  if (has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->timeout(), output);
  }

  // required .suloki.EventRight right = 7;
  if (has_right()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->right(), output);
  }

  // optional .suloki.EventPolicy policy = 8;
  if (has_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->policy(), output);
  }

  // required string callback = 9;
  if (has_callback()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->callback().data(), this->callback().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiRegRecvEventBody.callback");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->callback(), output);
  }

  // optional uint64 userdata = 10;
  if (has_userdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->userdata(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:suloki.SulokiRegRecvEventBody)
}

::google::protobuf::uint8* SulokiRegRecvEventBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:suloki.SulokiRegRecvEventBody)
  // required string patternKey = 1;
  if (has_patternkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->patternkey().data(), this->patternkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiRegRecvEventBody.patternKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->patternkey(), target);
  }

  // required sint32 businessId = 2;
  if (has_businessid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->businessid(), target);
  }

  // required sint32 messageId = 3;
  if (has_messageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->messageid(), target);
  }

  // optional sint64 sequenceNumber = 4;
  if (has_sequencenumber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(4, this->sequencenumber(), target);
  }

  // required .suloki.EventMode mode = 5;
  if (has_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->mode(), target);
  }

  // optional sint32 timeout = 6;
  if (has_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->timeout(), target);
  }

  // required .suloki.EventRight right = 7;
  if (has_right()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->right(), target);
  }

  // optional .suloki.EventPolicy policy = 8;
  if (has_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->policy(), target);
  }

  // required string callback = 9;
  if (has_callback()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->callback().data(), this->callback().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suloki.SulokiRegRecvEventBody.callback");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->callback(), target);
  }

  // optional uint64 userdata = 10;
  if (has_userdata()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->userdata(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:suloki.SulokiRegRecvEventBody)
  return target;
}

size_t SulokiRegRecvEventBody::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:suloki.SulokiRegRecvEventBody)
  size_t total_size = 0;

  if (has_patternkey()) {
    // required string patternKey = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->patternkey());
  }

  if (has_callback()) {
    // required string callback = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callback());
  }

  if (has_businessid()) {
    // required sint32 businessId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->businessid());
  }

  if (has_messageid()) {
    // required sint32 messageId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->messageid());
  }

  if (has_mode()) {
    // required .suloki.EventMode mode = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  if (has_right()) {
    // required .suloki.EventRight right = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->right());
  }

  return total_size;
}
size_t SulokiRegRecvEventBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:suloki.SulokiRegRecvEventBody)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x000000af) ^ 0x000000af) == 0) {  // All required fields are present.
    // required string patternKey = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->patternkey());

    // required string callback = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callback());

    // required sint32 businessId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->businessid());

    // required sint32 messageId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->messageid());

    // required .suloki.EventMode mode = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());

    // required .suloki.EventRight right = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->right());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional sint64 sequenceNumber = 4;
  if (has_sequencenumber()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->sequencenumber());
  }

  // optional sint32 timeout = 6;
  if (has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->timeout());
  }

  if (_has_bits_[8 / 32] & 768u) {
    // optional .suloki.EventPolicy policy = 8;
    if (has_policy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->policy());
    }

    // optional uint64 userdata = 10;
    if (has_userdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->userdata());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SulokiRegRecvEventBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suloki.SulokiRegRecvEventBody)
  GOOGLE_DCHECK_NE(&from, this);
  const SulokiRegRecvEventBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SulokiRegRecvEventBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suloki.SulokiRegRecvEventBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suloki.SulokiRegRecvEventBody)
    MergeFrom(*source);
  }
}

void SulokiRegRecvEventBody::MergeFrom(const SulokiRegRecvEventBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suloki.SulokiRegRecvEventBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 255u) {
    if (from.has_patternkey()) {
      set_has_patternkey();
      patternkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.patternkey_);
    }
    if (from.has_callback()) {
      set_has_callback();
      callback_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callback_);
    }
    if (from.has_businessid()) {
      set_businessid(from.businessid());
    }
    if (from.has_messageid()) {
      set_messageid(from.messageid());
    }
    if (from.has_sequencenumber()) {
      set_sequencenumber(from.sequencenumber());
    }
    if (from.has_mode()) {
      set_mode(from.mode());
    }
    if (from.has_timeout()) {
      set_timeout(from.timeout());
    }
    if (from.has_right()) {
      set_right(from.right());
    }
  }
  if (from._has_bits_[8 / 32] & 768u) {
    if (from.has_policy()) {
      set_policy(from.policy());
    }
    if (from.has_userdata()) {
      set_userdata(from.userdata());
    }
  }
}

void SulokiRegRecvEventBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suloki.SulokiRegRecvEventBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SulokiRegRecvEventBody::CopyFrom(const SulokiRegRecvEventBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suloki.SulokiRegRecvEventBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SulokiRegRecvEventBody::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000af) != 0x000000af) return false;
  return true;
}

void SulokiRegRecvEventBody::Swap(SulokiRegRecvEventBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SulokiRegRecvEventBody::InternalSwap(SulokiRegRecvEventBody* other) {
  patternkey_.Swap(&other->patternkey_);
  callback_.Swap(&other->callback_);
  std::swap(businessid_, other->businessid_);
  std::swap(messageid_, other->messageid_);
  std::swap(sequencenumber_, other->sequencenumber_);
  std::swap(mode_, other->mode_);
  std::swap(timeout_, other->timeout_);
  std::swap(right_, other->right_);
  std::swap(policy_, other->policy_);
  std::swap(userdata_, other->userdata_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SulokiRegRecvEventBody::GetMetadata() const {
  protobuf_suloki_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_suloki_2eproto::file_level_metadata[13];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SulokiRegRecvEventBody

// required string patternKey = 1;
bool SulokiRegRecvEventBody::has_patternkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SulokiRegRecvEventBody::set_has_patternkey() {
  _has_bits_[0] |= 0x00000001u;
}
void SulokiRegRecvEventBody::clear_has_patternkey() {
  _has_bits_[0] &= ~0x00000001u;
}
void SulokiRegRecvEventBody::clear_patternkey() {
  patternkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_patternkey();
}
const ::std::string& SulokiRegRecvEventBody::patternkey() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiRegRecvEventBody.patternKey)
  return patternkey_.GetNoArena();
}
void SulokiRegRecvEventBody::set_patternkey(const ::std::string& value) {
  set_has_patternkey();
  patternkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suloki.SulokiRegRecvEventBody.patternKey)
}
#if LANG_CXX11
void SulokiRegRecvEventBody::set_patternkey(::std::string&& value) {
  set_has_patternkey();
  patternkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:suloki.SulokiRegRecvEventBody.patternKey)
}
#endif
void SulokiRegRecvEventBody::set_patternkey(const char* value) {
  set_has_patternkey();
  patternkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suloki.SulokiRegRecvEventBody.patternKey)
}
void SulokiRegRecvEventBody::set_patternkey(const char* value, size_t size) {
  set_has_patternkey();
  patternkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiRegRecvEventBody.patternKey)
}
::std::string* SulokiRegRecvEventBody::mutable_patternkey() {
  set_has_patternkey();
  // @@protoc_insertion_point(field_mutable:suloki.SulokiRegRecvEventBody.patternKey)
  return patternkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SulokiRegRecvEventBody::release_patternkey() {
  // @@protoc_insertion_point(field_release:suloki.SulokiRegRecvEventBody.patternKey)
  clear_has_patternkey();
  return patternkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SulokiRegRecvEventBody::set_allocated_patternkey(::std::string* patternkey) {
  if (patternkey != NULL) {
    set_has_patternkey();
  } else {
    clear_has_patternkey();
  }
  patternkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), patternkey);
  // @@protoc_insertion_point(field_set_allocated:suloki.SulokiRegRecvEventBody.patternKey)
}

// required sint32 businessId = 2;
bool SulokiRegRecvEventBody::has_businessid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SulokiRegRecvEventBody::set_has_businessid() {
  _has_bits_[0] |= 0x00000004u;
}
void SulokiRegRecvEventBody::clear_has_businessid() {
  _has_bits_[0] &= ~0x00000004u;
}
void SulokiRegRecvEventBody::clear_businessid() {
  businessid_ = 0;
  clear_has_businessid();
}
::google::protobuf::int32 SulokiRegRecvEventBody::businessid() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiRegRecvEventBody.businessId)
  return businessid_;
}
void SulokiRegRecvEventBody::set_businessid(::google::protobuf::int32 value) {
  set_has_businessid();
  businessid_ = value;
  // @@protoc_insertion_point(field_set:suloki.SulokiRegRecvEventBody.businessId)
}

// required sint32 messageId = 3;
bool SulokiRegRecvEventBody::has_messageid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SulokiRegRecvEventBody::set_has_messageid() {
  _has_bits_[0] |= 0x00000008u;
}
void SulokiRegRecvEventBody::clear_has_messageid() {
  _has_bits_[0] &= ~0x00000008u;
}
void SulokiRegRecvEventBody::clear_messageid() {
  messageid_ = 0;
  clear_has_messageid();
}
::google::protobuf::int32 SulokiRegRecvEventBody::messageid() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiRegRecvEventBody.messageId)
  return messageid_;
}
void SulokiRegRecvEventBody::set_messageid(::google::protobuf::int32 value) {
  set_has_messageid();
  messageid_ = value;
  // @@protoc_insertion_point(field_set:suloki.SulokiRegRecvEventBody.messageId)
}

// optional sint64 sequenceNumber = 4;
bool SulokiRegRecvEventBody::has_sequencenumber() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SulokiRegRecvEventBody::set_has_sequencenumber() {
  _has_bits_[0] |= 0x00000010u;
}
void SulokiRegRecvEventBody::clear_has_sequencenumber() {
  _has_bits_[0] &= ~0x00000010u;
}
void SulokiRegRecvEventBody::clear_sequencenumber() {
  sequencenumber_ = GOOGLE_LONGLONG(0);
  clear_has_sequencenumber();
}
::google::protobuf::int64 SulokiRegRecvEventBody::sequencenumber() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiRegRecvEventBody.sequenceNumber)
  return sequencenumber_;
}
void SulokiRegRecvEventBody::set_sequencenumber(::google::protobuf::int64 value) {
  set_has_sequencenumber();
  sequencenumber_ = value;
  // @@protoc_insertion_point(field_set:suloki.SulokiRegRecvEventBody.sequenceNumber)
}

// required .suloki.EventMode mode = 5;
bool SulokiRegRecvEventBody::has_mode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SulokiRegRecvEventBody::set_has_mode() {
  _has_bits_[0] |= 0x00000020u;
}
void SulokiRegRecvEventBody::clear_has_mode() {
  _has_bits_[0] &= ~0x00000020u;
}
void SulokiRegRecvEventBody::clear_mode() {
  mode_ = 0;
  clear_has_mode();
}
::suloki::EventMode SulokiRegRecvEventBody::mode() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiRegRecvEventBody.mode)
  return static_cast< ::suloki::EventMode >(mode_);
}
void SulokiRegRecvEventBody::set_mode(::suloki::EventMode value) {
  assert(::suloki::EventMode_IsValid(value));
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:suloki.SulokiRegRecvEventBody.mode)
}

// optional sint32 timeout = 6;
bool SulokiRegRecvEventBody::has_timeout() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SulokiRegRecvEventBody::set_has_timeout() {
  _has_bits_[0] |= 0x00000040u;
}
void SulokiRegRecvEventBody::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000040u;
}
void SulokiRegRecvEventBody::clear_timeout() {
  timeout_ = 0;
  clear_has_timeout();
}
::google::protobuf::int32 SulokiRegRecvEventBody::timeout() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiRegRecvEventBody.timeout)
  return timeout_;
}
void SulokiRegRecvEventBody::set_timeout(::google::protobuf::int32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:suloki.SulokiRegRecvEventBody.timeout)
}

// required .suloki.EventRight right = 7;
bool SulokiRegRecvEventBody::has_right() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void SulokiRegRecvEventBody::set_has_right() {
  _has_bits_[0] |= 0x00000080u;
}
void SulokiRegRecvEventBody::clear_has_right() {
  _has_bits_[0] &= ~0x00000080u;
}
void SulokiRegRecvEventBody::clear_right() {
  right_ = 0;
  clear_has_right();
}
::suloki::EventRight SulokiRegRecvEventBody::right() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiRegRecvEventBody.right)
  return static_cast< ::suloki::EventRight >(right_);
}
void SulokiRegRecvEventBody::set_right(::suloki::EventRight value) {
  assert(::suloki::EventRight_IsValid(value));
  set_has_right();
  right_ = value;
  // @@protoc_insertion_point(field_set:suloki.SulokiRegRecvEventBody.right)
}

// optional .suloki.EventPolicy policy = 8;
bool SulokiRegRecvEventBody::has_policy() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void SulokiRegRecvEventBody::set_has_policy() {
  _has_bits_[0] |= 0x00000100u;
}
void SulokiRegRecvEventBody::clear_has_policy() {
  _has_bits_[0] &= ~0x00000100u;
}
void SulokiRegRecvEventBody::clear_policy() {
  policy_ = 0;
  clear_has_policy();
}
::suloki::EventPolicy SulokiRegRecvEventBody::policy() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiRegRecvEventBody.policy)
  return static_cast< ::suloki::EventPolicy >(policy_);
}
void SulokiRegRecvEventBody::set_policy(::suloki::EventPolicy value) {
  assert(::suloki::EventPolicy_IsValid(value));
  set_has_policy();
  policy_ = value;
  // @@protoc_insertion_point(field_set:suloki.SulokiRegRecvEventBody.policy)
}

// required string callback = 9;
bool SulokiRegRecvEventBody::has_callback() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SulokiRegRecvEventBody::set_has_callback() {
  _has_bits_[0] |= 0x00000002u;
}
void SulokiRegRecvEventBody::clear_has_callback() {
  _has_bits_[0] &= ~0x00000002u;
}
void SulokiRegRecvEventBody::clear_callback() {
  callback_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_callback();
}
const ::std::string& SulokiRegRecvEventBody::callback() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiRegRecvEventBody.callback)
  return callback_.GetNoArena();
}
void SulokiRegRecvEventBody::set_callback(const ::std::string& value) {
  set_has_callback();
  callback_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suloki.SulokiRegRecvEventBody.callback)
}
#if LANG_CXX11
void SulokiRegRecvEventBody::set_callback(::std::string&& value) {
  set_has_callback();
  callback_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:suloki.SulokiRegRecvEventBody.callback)
}
#endif
void SulokiRegRecvEventBody::set_callback(const char* value) {
  set_has_callback();
  callback_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suloki.SulokiRegRecvEventBody.callback)
}
void SulokiRegRecvEventBody::set_callback(const char* value, size_t size) {
  set_has_callback();
  callback_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suloki.SulokiRegRecvEventBody.callback)
}
::std::string* SulokiRegRecvEventBody::mutable_callback() {
  set_has_callback();
  // @@protoc_insertion_point(field_mutable:suloki.SulokiRegRecvEventBody.callback)
  return callback_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SulokiRegRecvEventBody::release_callback() {
  // @@protoc_insertion_point(field_release:suloki.SulokiRegRecvEventBody.callback)
  clear_has_callback();
  return callback_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SulokiRegRecvEventBody::set_allocated_callback(::std::string* callback) {
  if (callback != NULL) {
    set_has_callback();
  } else {
    clear_has_callback();
  }
  callback_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), callback);
  // @@protoc_insertion_point(field_set_allocated:suloki.SulokiRegRecvEventBody.callback)
}

// optional uint64 userdata = 10;
bool SulokiRegRecvEventBody::has_userdata() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void SulokiRegRecvEventBody::set_has_userdata() {
  _has_bits_[0] |= 0x00000200u;
}
void SulokiRegRecvEventBody::clear_has_userdata() {
  _has_bits_[0] &= ~0x00000200u;
}
void SulokiRegRecvEventBody::clear_userdata() {
  userdata_ = GOOGLE_ULONGLONG(0);
  clear_has_userdata();
}
::google::protobuf::uint64 SulokiRegRecvEventBody::userdata() const {
  // @@protoc_insertion_point(field_get:suloki.SulokiRegRecvEventBody.userdata)
  return userdata_;
}
void SulokiRegRecvEventBody::set_userdata(::google::protobuf::uint64 value) {
  set_has_userdata();
  userdata_ = value;
  // @@protoc_insertion_point(field_set:suloki.SulokiRegRecvEventBody.userdata)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace suloki

// @@protoc_insertion_point(global_scope)
